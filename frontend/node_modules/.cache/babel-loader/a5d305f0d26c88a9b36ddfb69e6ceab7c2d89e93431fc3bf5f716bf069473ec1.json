{"ast":null,"code":"var _jsxFileName = \"/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://127.0.0.1:8000\";\nconst COMMANDS = [{\n  name: \"topic\",\n  usage: \"/topic <new_topic>\",\n  description: \"Switch the current lesson topic\"\n}, {\n  name: \"session\",\n  usage: \"/session new\",\n  description: \"Start a brand-new session\"\n}, {\n  name: \"summary\",\n  usage: \"/summary\",\n  description: \"Summarize the active session\"\n}, {\n  name: \"search_topic\",\n  usage: \"/search_topic <keywords>\",\n  description: \"Search every stored memory for keywords\"\n}, {\n  name: \"all\",\n  usage: \"/all\",\n  description: \"List every stored memory entry\"\n}, {\n  name: \"reset\",\n  usage: \"/reset\",\n  description: \"Clear the entire local memory store\"\n}, {\n  name: \"help\",\n  usage: \"/help\",\n  description: \"Display the command reference\"\n}, {\n  name: \"search\",\n  usage: \"/search <keywords>\",\n  description: \"Legacy search on the active filters\"\n}];\nconst createMessage = (role, text) => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString()\n});\nconst formatTime = iso => new Date(iso).toLocaleTimeString([], {\n  hour: \"2-digit\",\n  minute: \"2-digit\"\n});\nconst ROLE_META = {\n  teacher: {\n    label: \"Teacher\",\n    initial: \"T\"\n  },\n  student: {\n    label: \"Student\",\n    initial: \"S\"\n  },\n  system: {\n    label: \"System\",\n    initial: \"‚Ñπ\"\n  }\n};\nexport default function ChatApp() {\n  _s();\n  const [messages, setMessages] = useState(() => [createMessage(\"system\", \"Welcome! Let‚Äôs start when you‚Äôre ready to teach.\")]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState(null);\n  const [isSending, setIsSending] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [commandQuery, setCommandQuery] = useState(\"\");\n  const [teachMode, setTeachMode] = useState(false);\n  const bottomRef = useRef(null);\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, isSending]);\n  const pushSystemMessage = text => {\n    setMessages(prev => [...prev, createMessage(\"system\", text)]);\n  };\n  useEffect(() => {\n    const fetchTeachMode = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/teach_mode`);\n        if (!res.ok) {\n          return;\n        }\n        const data = await res.json();\n        setTeachMode(Boolean(data === null || data === void 0 ? void 0 : data.teach_mode));\n      } catch (error) {\n        console.error(\"Failed to load Teach Mode state\", error);\n      }\n    };\n    fetchTeachMode();\n  }, []);\n  const filteredCommands = useMemo(() => {\n    if (!showSuggestions) {\n      return [];\n    }\n    const token = commandQuery.trim();\n    if (!token) {\n      return COMMANDS;\n    }\n    return COMMANDS.filter(cmd => cmd.name.toLowerCase().includes(token) || cmd.usage.toLowerCase().includes(token));\n  }, [commandQuery, showSuggestions]);\n  const closeCommandPalette = () => {\n    setShowSuggestions(false);\n    setCommandQuery(\"\");\n  };\n  const updateTeachMode = async enabled => {\n    try {\n      const res = await fetch(`${API_BASE}/teach_mode?enabled=${enabled}`, {\n        method: \"POST\"\n      });\n      if (!res.ok) {\n        const text = await res.text();\n        pushSystemMessage(`‚ùå Teach Mode update failed: ${text || res.statusText}`);\n        return;\n      }\n      const data = await res.json();\n      const state = Boolean(data === null || data === void 0 ? void 0 : data.teach_mode);\n      setTeachMode(state);\n      pushSystemMessage(`Teach Mode ${state ? \"ON\" : \"OFF\"}.`);\n    } catch (error) {\n      console.error(\"Failed to update Teach Mode\", error);\n      pushSystemMessage(\"‚ö†Ô∏è Could not reach the Teach Mode endpoint.\");\n    }\n  };\n  const handleToggleTeachMode = async () => {\n    await updateTeachMode(!teachMode);\n  };\n  const handleInputChange = value => {\n    setInput(value);\n    if (value.startsWith(\"/\")) {\n      const afterSlash = value.slice(1).toLowerCase();\n      const [firstToken = \"\"] = afterSlash.split(/\\s+/);\n      setShowSuggestions(true);\n      setCommandQuery(firstToken);\n    } else {\n      closeCommandPalette();\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([createMessage(\"system\", \"New chat started. Use /topic <subject> when you're ready to begin teaching.\")]);\n    setSessionId(null);\n    setInput(\"\");\n    closeCommandPalette();\n  };\n  const processInput = async rawInput => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n    setInput(\"\");\n    if (trimmed.startsWith(\"/\")) {\n      closeCommandPalette();\n      await handleCommand(trimmed);\n      return;\n    }\n    closeCommandPalette();\n    await sendPrompt(trimmed);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await processInput(input);\n  };\n  const sendPrompt = async prompt => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages(prev => [...prev, teacherMessage]);\n    setIsSending(true);\n    try {\n      var _data$session_id;\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n      const response = await fetch(url.toString(), {\n        method: \"POST\"\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages(prev => [...prev, createMessage(\"system\", `‚ùå Server error: ${errorText || response.statusText}`)]);\n        return;\n      }\n      const data = await response.json();\n      setSessionId((_data$session_id = data.session_id) !== null && _data$session_id !== void 0 ? _data$session_id : sessionId);\n      const rawResponse = typeof data.response === \"string\" ? data.response : \"\";\n      const trimmedResponse = rawResponse.trim();\n      const assistantReply = trimmedResponse.length > 0 ? trimmedResponse : teachMode ? \"\" : \"I did not receive a response from the model.\";\n      setMessages(prev => [...prev, createMessage(\"student\", assistantReply)]);\n    } catch (error) {\n      console.error(error);\n      setMessages(prev => [...prev, createMessage(\"system\", \"‚ö†Ô∏è Connection error. Confirm the FastAPI server is running.\")]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n  const handleCommand = async rawCommand => {\n    const stripped = rawCommand.slice(1).trim();\n    const commandMessage = createMessage(\"teacher\", rawCommand);\n    if (!stripped) {\n      setMessages(prev => [...prev, commandMessage, createMessage(\"system\", \"Type /help to see the available commands.\")]);\n      return;\n    }\n    const [commandToken, ...args] = stripped.split(/\\s+/);\n    const normalized = commandToken.toLowerCase();\n    const appendSystem = (...systemTexts) => {\n      setMessages(prev => [...prev, commandMessage, ...systemTexts.map(text => createMessage(\"system\", text))]);\n    };\n    if (normalized === \"topic\") {\n      const topic = args.join(\" \").trim();\n      if (!topic) {\n        appendSystem(\"Usage: /topic <new_topic>\");\n        return;\n      }\n      try {\n        var _data$message;\n        const url = new URL(`${API_BASE}/topic`);\n        url.searchParams.set(\"new_topic\", topic);\n        const res = await fetch(url.toString(), {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Topic update failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem((_data$message = data.message) !== null && _data$message !== void 0 ? _data$message : `‚úÖ Topic set to '${topic}'.`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the topic endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"session\") {\n      const sub = (args[0] || \"\").toLowerCase();\n      if (sub === \"new\") {\n        try {\n          var _data$session_id2;\n          const res = await fetch(`${API_BASE}/session`, {\n            method: \"POST\"\n          });\n          if (!res.ok) {\n            const text = await res.text();\n            appendSystem(`‚ùå Session start failed: ${text || res.statusText}`);\n            return;\n          }\n          const data = await res.json();\n          handleNewChat();\n          setSessionId((_data$session_id2 = data.session_id) !== null && _data$session_id2 !== void 0 ? _data$session_id2 : null);\n          setMessages(prev => {\n            var _data$message2;\n            return [...prev, commandMessage, createMessage(\"system\", (_data$message2 = data.message) !== null && _data$message2 !== void 0 ? _data$message2 : \"üÜï New session started.\")];\n          });\n        } catch (error) {\n          console.error(error);\n          appendSystem(\"‚ö†Ô∏è Could not start a new session.\");\n        }\n      } else {\n        appendSystem(\"Usage: /session new\");\n      }\n      return;\n    }\n    if (normalized === \"summary\") {\n      if (!sessionId) {\n        appendSystem(\"No active session. Use /session new to begin.\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/summary`);\n        url.searchParams.set(\"session_id\", sessionId);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Summary failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const summary = typeof data.summary === \"string\" ? data.summary : JSON.stringify(data.summary);\n        appendSystem(`üìò Session summary:\\n\\n${summary}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not retrieve the summary.\");\n      }\n      return;\n    }\n    if (normalized === \"search_topic\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search_topic <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search_topic`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Topic search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched ‚Äú${query}‚Äù.`);\n          return;\n        }\n        const formatted = hits.map((item, index) => {\n          var _item$memory, _item$score$toFixed, _item$score, _item$score$toFixed2;\n          return `${index + 1}. ${(_item$memory = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory !== void 0 ? _item$memory : \"‚Äî\"}\\n   score: ${(_item$score$toFixed = item === null || item === void 0 ? void 0 : (_item$score = item.score) === null || _item$score === void 0 ? void 0 : (_item$score$toFixed2 = _item$score.toFixed) === null || _item$score$toFixed2 === void 0 ? void 0 : _item$score$toFixed2.call(_item$score, 3)) !== null && _item$score$toFixed !== void 0 ? _item$score$toFixed : \"?\"}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`üîç Memories mentioning ‚Äú${query}‚Äù:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the search endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search <keywords>\");\n        return;\n      }\n      try {\n        var _data$results;\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray((_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.results) ? data.results.results : Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched ‚Äú${query}‚Äù.`);\n          return;\n        }\n        const formatted = hits.map((item, index) => {\n          var _ref, _item$memory2;\n          const memoryText = (_ref = (_item$memory2 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory2 !== void 0 ? _item$memory2 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref !== void 0 ? _ref : JSON.stringify(item);\n          return `${index + 1}. ${memoryText}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`üîç Search results for ‚Äú${query}‚Äù:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the search API.\");\n      }\n      return;\n    }\n    if (normalized === \"all\") {\n      try {\n        const res = await fetch(`${API_BASE}/all`);\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Fetch failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          appendSystem(\"No stored memories yet.\");\n          return;\n        }\n        const formatted = memories.map((item, index) => {\n          var _item$metadata, _ref2, _item$memory3;\n          const meta = item !== null && item !== void 0 && (_item$metadata = item.metadata) !== null && _item$metadata !== void 0 && _item$metadata.type ? ` (${item.metadata.type})` : \"\";\n          const base = (_ref2 = (_item$memory3 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory3 !== void 0 ? _item$memory3 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref2 !== void 0 ? _ref2 : JSON.stringify(item);\n          return `${index + 1}. ${base}${meta}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`üóÇÔ∏è Complete memory listing:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not fetch stored memories.\");\n      }\n      return;\n    }\n    if (normalized === \"reset\") {\n      try {\n        var _data$message3;\n        const res = await fetch(`${API_BASE}/reset`, {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Reset failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem((_data$message3 = data === null || data === void 0 ? void 0 : data.message) !== null && _data$message3 !== void 0 ? _data$message3 : \"Memory reset complete.\");\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the reset endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"help\") {\n      const helpText = COMMANDS.map(cmd => `${cmd.usage} ‚Äî ${cmd.description}`).join(\"\\n\");\n      appendSystem(helpText);\n      return;\n    }\n    appendSystem(`Unknown command ‚Äú/${normalized}‚Äù. Try /help.`);\n  };\n  const applyCommandTemplate = command => {\n    const template = command.usage.endsWith(\" \") ? command.usage : `${command.usage} `;\n    setInput(template);\n    setCommandQuery(\"\");\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"chat-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"sidebar-title\",\n              children: \"Mem0 Classroom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sidebar-subtitle\",\n              children: \"Fully local tutor (Ollama + Qdrant)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ghost-button\",\n            onClick: handleNewChat,\n            children: \"New chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), sessionId ? /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"session-chip\",\n            children: sessionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No active session yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"chat-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chat-header-title\",\n              children: \"AI Student Mentor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chat-header-subtitle\",\n              children: \"Guide the learner and the assistant will respond with grounded context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `ghost-button teach-toggle ${teachMode ? \"active\" : \"\"}`,\n              onClick: handleToggleTeachMode,\n              disabled: isSending,\n              children: [\"Teach Mode: \", teachMode ? \"ON\" : \"OFF\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-badge ${isSending ? \"typing\" : \"idle\"}`,\n              children: isSending ? \"Generating‚Ä¶\" : \"Idle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"message-list\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"article\", {\n            className: `message-row ${message.role}`,\n            \"aria-label\": `${ROLE_META[message.role].label} message`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-avatar ${message.role}`,\n              children: ROLE_META[message.role].initial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-bubble ${message.role}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: ROLE_META[message.role].label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: formatTime(message.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)), isSending && /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"message-row student typing\",\n            \"aria-live\": \"polite\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar student\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble student\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: \"Student\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: \"\\u2026\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: bottomRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-textarea-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chat-textarea\",\n              placeholder: \"Send a prompt or /command. Press Enter to send, Shift+Enter for a new line.\",\n              value: input,\n              disabled: isSending,\n              onChange: event => handleInputChange(event.target.value),\n              onKeyDown: async event => {\n                if (event.key === \"Escape\" && showSuggestions) {\n                  event.preventDefault();\n                  closeCommandPalette();\n                  return;\n                }\n                if (event.key === \"Tab\" && showSuggestions && filteredCommands.length > 0) {\n                  event.preventDefault();\n                  applyCommandTemplate(filteredCommands[0]);\n                  return;\n                }\n                if (event.key === \"Enter\" && !event.shiftKey) {\n                  event.preventDefault();\n                  await processInput(input);\n                }\n              },\n              rows: Math.min(6, input.split(\"\\n\").length + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), showSuggestions && filteredCommands.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"command-suggestions\",\n              children: filteredCommands.map(cmd => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"command-suggestion\",\n                onMouseDown: event => {\n                  event.preventDefault();\n                  applyCommandTemplate(cmd);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: cmd.usage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: cmd.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 23\n                }, this)]\n              }, cmd.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"secondary-button\",\n              onClick: () => setInput(prev => `${prev}\\n`),\n              disabled: isSending,\n              children: \"New line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"primary-button\",\n              disabled: isSending,\n              children: isSending ? \"Sending‚Ä¶\" : \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"RIl3mlTBoHzHEI8l3Sl8ZpcPHZU=\");\n_c = ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","API_BASE","COMMANDS","name","usage","description","createMessage","role","text","id","Date","now","Math","random","toString","slice","createdAt","toISOString","formatTime","iso","toLocaleTimeString","hour","minute","ROLE_META","teacher","label","initial","student","system","ChatApp","_s","messages","setMessages","input","setInput","sessionId","setSessionId","isSending","setIsSending","showSuggestions","setShowSuggestions","commandQuery","setCommandQuery","teachMode","setTeachMode","bottomRef","_bottomRef$current","current","scrollIntoView","behavior","pushSystemMessage","prev","fetchTeachMode","res","fetch","ok","data","json","Boolean","teach_mode","error","console","filteredCommands","token","trim","filter","cmd","toLowerCase","includes","closeCommandPalette","updateTeachMode","enabled","method","statusText","state","handleToggleTeachMode","handleInputChange","value","startsWith","afterSlash","firstToken","split","handleNewChat","processInput","rawInput","trimmed","handleCommand","sendPrompt","handleSubmit","event","preventDefault","prompt","teacherMessage","_data$session_id","url","URL","searchParams","set","response","errorText","session_id","rawResponse","trimmedResponse","assistantReply","length","rawCommand","stripped","commandMessage","commandToken","args","normalized","appendSystem","systemTexts","map","topic","join","_data$message","message","sub","_data$session_id2","_data$message2","summary","JSON","stringify","query","hits","Array","isArray","results","formatted","item","index","_item$memory","_item$score$toFixed","_item$score","_item$score$toFixed2","memory","score","toFixed","call","_data$results","_ref","_item$memory2","memoryText","memories","_item$metadata","_ref2","_item$memory3","meta","metadata","type","base","_data$message3","helpText","applyCommandTemplate","command","template","endsWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","onSubmit","placeholder","onChange","target","onKeyDown","key","shiftKey","rows","min","onMouseDown","_c","$RefreshReg$"],"sources":["/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx"],"sourcesContent":["import React, { FormEvent, useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\n\ntype MessageRole = \"teacher\" | \"student\" | \"system\";\n\ntype Message = {\n  id: string;\n  role: MessageRole;\n  text: string;\n  createdAt: string;\n};\n\ntype CommandDefinition = {\n  name: string;\n  usage: string;\n  description: string;\n};\n\nconst API_BASE = \"http://127.0.0.1:8000\";\n\nconst COMMANDS: CommandDefinition[] = [\n  {\n    name: \"topic\",\n    usage: \"/topic <new_topic>\",\n    description: \"Switch the current lesson topic\",\n  },\n  {\n    name: \"session\",\n    usage: \"/session new\",\n    description: \"Start a brand-new session\",\n  },\n  {\n    name: \"summary\",\n    usage: \"/summary\",\n    description: \"Summarize the active session\",\n  },\n  {\n    name: \"search_topic\",\n    usage: \"/search_topic <keywords>\",\n    description: \"Search every stored memory for keywords\",\n  },\n  {\n    name: \"all\",\n    usage: \"/all\",\n    description: \"List every stored memory entry\",\n  },\n  {\n    name: \"reset\",\n    usage: \"/reset\",\n    description: \"Clear the entire local memory store\",\n  },\n  {\n    name: \"help\",\n    usage: \"/help\",\n    description: \"Display the command reference\",\n  },\n  {\n    name: \"search\",\n    usage: \"/search <keywords>\",\n    description: \"Legacy search on the active filters\",\n  },\n];\n\nconst createMessage = (role: MessageRole, text: string): Message => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString(),\n});\n\nconst formatTime = (iso: string) =>\n  new Date(iso).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nconst ROLE_META: Record<MessageRole, { label: string; initial: string }> = {\n  teacher: { label: \"Teacher\", initial: \"T\" },\n  student: { label: \"Student\", initial: \"S\" },\n  system: { label: \"System\", initial: \"‚Ñπ\" },\n};\n\nexport default function ChatApp() {\n  const [messages, setMessages] = useState<Message[]>(() => [\n    createMessage(\"system\", \"Welcome! Let‚Äôs start when you‚Äôre ready to teach.\"),\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState<string | null>(null);\n  const [isSending, setIsSending] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [commandQuery, setCommandQuery] = useState(\"\");\n  const [teachMode, setTeachMode] = useState(false);\n\n  const bottomRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, isSending]);\n\n  const pushSystemMessage = (text: string) => {\n    setMessages((prev) => [...prev, createMessage(\"system\", text)]);\n  };\n\n  useEffect(() => {\n    const fetchTeachMode = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/teach_mode`);\n        if (!res.ok) {\n          return;\n        }\n        const data = await res.json();\n        setTeachMode(Boolean(data?.teach_mode));\n      } catch (error) {\n        console.error(\"Failed to load Teach Mode state\", error);\n      }\n    };\n\n    fetchTeachMode();\n  }, []);\n\n  const filteredCommands = useMemo(() => {\n    if (!showSuggestions) {\n      return [];\n    }\n    const token = commandQuery.trim();\n    if (!token) {\n      return COMMANDS;\n    }\n    return COMMANDS.filter((cmd) =>\n      cmd.name.toLowerCase().includes(token) || cmd.usage.toLowerCase().includes(token)\n    );\n  }, [commandQuery, showSuggestions]);\n\n  const closeCommandPalette = () => {\n    setShowSuggestions(false);\n    setCommandQuery(\"\");\n  };\n\n  const updateTeachMode = async (enabled: boolean) => {\n    try {\n      const res = await fetch(`${API_BASE}/teach_mode?enabled=${enabled}`, { method: \"POST\" });\n      if (!res.ok) {\n        const text = await res.text();\n        pushSystemMessage(`‚ùå Teach Mode update failed: ${text || res.statusText}`);\n        return;\n      }\n      const data = await res.json();\n      const state = Boolean(data?.teach_mode);\n      setTeachMode(state);\n      pushSystemMessage(`Teach Mode ${state ? \"ON\" : \"OFF\"}.`);\n    } catch (error) {\n      console.error(\"Failed to update Teach Mode\", error);\n      pushSystemMessage(\"‚ö†Ô∏è Could not reach the Teach Mode endpoint.\");\n    }\n  };\n\n  const handleToggleTeachMode = async () => {\n    await updateTeachMode(!teachMode);\n  };\n\n  const handleInputChange = (value: string) => {\n    setInput(value);\n    if (value.startsWith(\"/\")) {\n      const afterSlash = value.slice(1).toLowerCase();\n      const [firstToken = \"\"] = afterSlash.split(/\\s+/);\n      setShowSuggestions(true);\n      setCommandQuery(firstToken);\n    } else {\n      closeCommandPalette();\n    }\n  };\n\n  const handleNewChat = () => {\n    setMessages([\n      createMessage(\n        \"system\",\n        \"New chat started. Use /topic <subject> when you're ready to begin teaching.\"\n      ),\n    ]);\n    setSessionId(null);\n    setInput(\"\");\n    closeCommandPalette();\n  };\n\n  const processInput = async (rawInput: string) => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n\n    setInput(\"\");\n\n    if (trimmed.startsWith(\"/\")) {\n      closeCommandPalette();\n      await handleCommand(trimmed);\n      return;\n    }\n\n    closeCommandPalette();\n    await sendPrompt(trimmed);\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    await processInput(input);\n  };\n\n  const sendPrompt = async (prompt: string) => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages((prev) => [...prev, teacherMessage]);\n    setIsSending(true);\n\n    try {\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n\n      const response = await fetch(url.toString(), { method: \"POST\" });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", `‚ùå Server error: ${errorText || response.statusText}`),\n        ]);\n        return;\n      }\n\n      const data = await response.json();\n      setSessionId(data.session_id ?? sessionId);\n\n      const rawResponse = typeof data.response === \"string\" ? data.response : \"\";\n      const trimmedResponse = rawResponse.trim();\n      const assistantReply =\n        trimmedResponse.length > 0\n          ? trimmedResponse\n          : teachMode\n          ? \"\"\n          : \"I did not receive a response from the model.\";\n\n      setMessages((prev) => [...prev, createMessage(\"student\", assistantReply)]);\n    } catch (error) {\n      console.error(error);\n      setMessages((prev) => [\n        ...prev,\n        createMessage(\"system\", \"‚ö†Ô∏è Connection error. Confirm the FastAPI server is running.\"),\n      ]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  const handleCommand = async (rawCommand: string) => {\n    const stripped = rawCommand.slice(1).trim();\n    const commandMessage = createMessage(\"teacher\", rawCommand);\n\n    if (!stripped) {\n      setMessages((prev) => [\n        ...prev,\n        commandMessage,\n        createMessage(\"system\", \"Type /help to see the available commands.\"),\n      ]);\n      return;\n    }\n\n    const [commandToken, ...args] = stripped.split(/\\s+/);\n    const normalized = commandToken.toLowerCase();\n\n    const appendSystem = (...systemTexts: string[]) => {\n      setMessages((prev) => [\n        ...prev,\n        commandMessage,\n        ...systemTexts.map((text) => createMessage(\"system\", text)),\n      ]);\n    };\n\n    if (normalized === \"topic\") {\n      const topic = args.join(\" \").trim();\n      if (!topic) {\n        appendSystem(\"Usage: /topic <new_topic>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/topic`);\n        url.searchParams.set(\"new_topic\", topic);\n        const res = await fetch(url.toString(), { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Topic update failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem(data.message ?? `‚úÖ Topic set to '${topic}'.`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the topic endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"session\") {\n      const sub = (args[0] || \"\").toLowerCase();\n      if (sub === \"new\") {\n        try {\n          const res = await fetch(`${API_BASE}/session`, { method: \"POST\" });\n          if (!res.ok) {\n            const text = await res.text();\n            appendSystem(`‚ùå Session start failed: ${text || res.statusText}`);\n            return;\n          }\n          const data = await res.json();\n          handleNewChat();\n          setSessionId(data.session_id ?? null);\n          setMessages((prev) => [\n            ...prev,\n            commandMessage,\n            createMessage(\"system\", data.message ?? \"üÜï New session started.\"),\n          ]);\n        } catch (error) {\n          console.error(error);\n          appendSystem(\"‚ö†Ô∏è Could not start a new session.\");\n        }\n      } else {\n        appendSystem(\"Usage: /session new\");\n      }\n      return;\n    }\n\n    if (normalized === \"summary\") {\n      if (!sessionId) {\n        appendSystem(\"No active session. Use /session new to begin.\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/summary`);\n        url.searchParams.set(\"session_id\", sessionId);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Summary failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const summary = typeof data.summary === \"string\" ? data.summary : JSON.stringify(data.summary);\n        appendSystem(`üìò Session summary:\\n\\n${summary}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not retrieve the summary.\");\n      }\n      return;\n    }\n\n    if (normalized === \"search_topic\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search_topic <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search_topic`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Topic search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched ‚Äú${query}‚Äù.`);\n          return;\n        }\n        const formatted = hits\n          .map(\n            (item: any, index: number) =>\n              `${index + 1}. ${item?.memory ?? \"‚Äî\"}\\n   score: ${item?.score?.toFixed?.(3) ?? \"?\"}`\n          )\n          .join(\"\\n\\n\");\n        appendSystem(`üîç Memories mentioning ‚Äú${query}‚Äù:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the search endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results?.results)\n          ? data.results.results\n          : Array.isArray(data.results)\n          ? data.results\n          : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched ‚Äú${query}‚Äù.`);\n          return;\n        }\n        const formatted = hits\n          .map((item: any, index: number) => {\n            const memoryText = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${index + 1}. ${memoryText}`;\n          })\n          .join(\"\\n\\n\");\n        appendSystem(`üîç Search results for ‚Äú${query}‚Äù:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the search API.\");\n      }\n      return;\n    }\n\n    if (normalized === \"all\") {\n      try {\n        const res = await fetch(`${API_BASE}/all`);\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Fetch failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          appendSystem(\"No stored memories yet.\");\n          return;\n        }\n        const formatted = memories\n          .map((item: any, index: number) => {\n            const meta = item?.metadata?.type ? ` (${item.metadata.type})` : \"\";\n            const base = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${index + 1}. ${base}${meta}`;\n          })\n          .join(\"\\n\\n\");\n        appendSystem(`üóÇÔ∏è Complete memory listing:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not fetch stored memories.\");\n      }\n      return;\n    }\n\n    if (normalized === \"reset\") {\n      try {\n        const res = await fetch(`${API_BASE}/reset`, { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Reset failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem(data?.message ?? \"Memory reset complete.\");\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the reset endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"help\") {\n      const helpText = COMMANDS.map((cmd) => `${cmd.usage} ‚Äî ${cmd.description}`).join(\"\\n\");\n      appendSystem(helpText);\n      return;\n    }\n\n    appendSystem(`Unknown command ‚Äú/${normalized}‚Äù. Try /help.`);\n  };\n\n  const applyCommandTemplate = (command: CommandDefinition) => {\n    const template = command.usage.endsWith(\" \") ? command.usage : `${command.usage} `;\n    setInput(template);\n    setCommandQuery(\"\");\n    setShowSuggestions(false);\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"chat-shell\">\n        <aside className=\"chat-sidebar\">\n          <div className=\"sidebar-header\">\n            <div>\n              <h1 className=\"sidebar-title\">Mem0 Classroom</h1>\n              <p className=\"sidebar-subtitle\">Fully local tutor (Ollama + Qdrant)</p>\n            </div>\n            <button className=\"ghost-button\" onClick={handleNewChat}>\n              New chat\n            </button>\n          </div>\n\n          <div className=\"sidebar-section\">\n            <h2>Session</h2>\n            {sessionId ? (\n              <code className=\"session-chip\">{sessionId}</code>\n            ) : (\n              <p>No active session yet.</p>\n            )}\n          </div>\n\n        </aside>\n\n        <main className=\"chat-main\">\n          <header className=\"chat-header\">\n            <div>\n              <h2 className=\"chat-header-title\">AI Student Mentor</h2>\n              <p className=\"chat-header-subtitle\">\n                Guide the learner and the assistant will respond with grounded context.\n              </p>\n            </div>\n            <div className=\"chat-header-actions\">\n              <button\n                type=\"button\"\n                className={`ghost-button teach-toggle ${teachMode ? \"active\" : \"\"}`}\n                onClick={handleToggleTeachMode}\n                disabled={isSending}\n              >\n                Teach Mode: {teachMode ? \"ON\" : \"OFF\"}\n              </button>\n              <span className={`status-badge ${isSending ? \"typing\" : \"idle\"}`}>\n                {isSending ? \"Generating‚Ä¶\" : \"Idle\"}\n              </span>\n            </div>\n          </header>\n\n          <section className=\"message-list\">\n            {messages.map((message) => (\n              <article\n                key={message.id}\n                className={`message-row ${message.role}`}\n                aria-label={`${ROLE_META[message.role].label} message`}\n              >\n                <div className={`message-avatar ${message.role}`}>\n                  {ROLE_META[message.role].initial}\n                </div>\n                <div className={`message-bubble ${message.role}`}>\n                  <div className=\"message-meta\">\n                    <span className=\"role\">{ROLE_META[message.role].label}</span>\n                    <span className=\"time\">{formatTime(message.createdAt)}</span>\n                  </div>\n                  <div className=\"message-text\">{message.text}</div>\n                </div>\n              </article>\n            ))}\n\n            {isSending && (\n              <article className=\"message-row student typing\" aria-live=\"polite\">\n                <div className=\"message-avatar student\">S</div>\n                <div className=\"message-bubble student\">\n                  <div className=\"message-meta\">\n                    <span className=\"role\">Student</span>\n                    <span className=\"time\">‚Ä¶</span>\n                  </div>\n                  <div className=\"typing-indicator\">\n                    <span />\n                    <span />\n                    <span />\n                  </div>\n                </div>\n              </article>\n            )}\n            <div ref={bottomRef} />\n          </section>\n\n          <form className=\"chat-input\" onSubmit={handleSubmit}>\n            <div className=\"chat-textarea-wrapper\">\n              <textarea\n                className=\"chat-textarea\"\n                placeholder=\"Send a prompt or /command. Press Enter to send, Shift+Enter for a new line.\"\n                value={input}\n                disabled={isSending}\n                onChange={(event) => handleInputChange(event.target.value)}\n                onKeyDown={async (event) => {\n                  if (event.key === \"Escape\" && showSuggestions) {\n                    event.preventDefault();\n                    closeCommandPalette();\n                    return;\n                  }\n                  if (event.key === \"Tab\" && showSuggestions && filteredCommands.length > 0) {\n                    event.preventDefault();\n                    applyCommandTemplate(filteredCommands[0]);\n                    return;\n                  }\n                  if (event.key === \"Enter\" && !event.shiftKey) {\n                    event.preventDefault();\n                    await processInput(input);\n                  }\n                }}\n                rows={Math.min(6, input.split(\"\\n\").length + 1)}\n              />\n\n              {showSuggestions && filteredCommands.length > 0 && (\n                <div className=\"command-suggestions\">\n                  {filteredCommands.map((cmd) => (\n                    <button\n                      key={cmd.name}\n                      type=\"button\"\n                      className=\"command-suggestion\"\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        applyCommandTemplate(cmd);\n                      }}\n                    >\n                      <strong>{cmd.usage}</strong>\n                      <span>{cmd.description}</span>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            <div className=\"chat-actions\">\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={() => setInput((prev) => `${prev}\\n`)}\n                disabled={isSending}\n              >\n                New line\n              </button>\n              <button type=\"submit\" className=\"primary-button\" disabled={isSending}>\n                {isSending ? \"Sending‚Ä¶\" : \"Send\"}\n              </button>\n            </div>\n          </form>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}