{"ast":null,"code":"var _jsxFileName = \"/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://127.0.0.1:8000\";\nconst createMessage = (role, text) => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString()\n});\nconst formatTime = iso => new Date(iso).toLocaleTimeString([], {\n  hour: \"2-digit\",\n  minute: \"2-digit\"\n});\nconst ROLE_META = {\n  teacher: {\n    label: \"Teacher\",\n    initial: \"T\"\n  },\n  student: {\n    label: \"Student\",\n    initial: \"S\"\n  },\n  system: {\n    label: \"System\",\n    initial: \"ℹ\"\n  }\n};\nexport default function ChatApp() {\n  _s();\n  const [messages, setMessages] = useState(() => [createMessage(\"system\", \"Welcome! Start the lesson to see the student's recall evolve. Use /search <keywords> to review stored memories.\")]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState(null);\n  const [isSending, setIsSending] = useState(false);\n  const bottomRef = useRef(null);\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, isSending]);\n  const processInput = async rawInput => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n    const isCommand = trimmed.startsWith(\"/\");\n    if (isSending && !isCommand) return;\n    setInput(\"\");\n    if (isCommand) {\n      setMessages(prev => [...prev, createMessage(\"teacher\", trimmed)]);\n      await handleCommand(trimmed);\n      return;\n    }\n    await sendPrompt(trimmed);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await processInput(input);\n  };\n  const sendPrompt = async prompt => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages(prev => [...prev, teacherMessage]);\n    setIsSending(true);\n    try {\n      var _data$session_id;\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n      const response = await fetch(url.toString(), {\n        method: \"POST\"\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages(prev => [...prev, createMessage(\"system\", `❌ Server error: ${errorText || response.statusText}`)]);\n        return;\n      }\n      const data = await response.json();\n      setSessionId((_data$session_id = data.session_id) !== null && _data$session_id !== void 0 ? _data$session_id : sessionId);\n      const assistantReply = typeof data.response === \"string\" && data.response.trim().length > 0 ? data.response.trim() : \"I did not receive a response from the model.\";\n      setMessages(prev => [...prev, createMessage(\"student\", assistantReply)]);\n    } catch (error) {\n      console.error(error);\n      setMessages(prev => [...prev, createMessage(\"system\", \"⚠️ Connection error. Confirm the FastAPI server is running.\")]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n  const handleCommand = async rawCommand => {\n    const [commandToken, ...args] = rawCommand.slice(1).trim().split(/\\s+/);\n    if (!commandToken) {\n      return;\n    }\n    const normalized = commandToken.toLowerCase();\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        setMessages(prev => [...prev, createMessage(\"system\", \"Usage: /search <keywords>\")]);\n        return;\n      }\n      try {\n        var _data$results;\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          setMessages(prev => [...prev, createMessage(\"system\", `❌ Search failed: ${text || res.statusText}`)]);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray((_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.results) ? data.results.results : Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          setMessages(prev => [...prev, createMessage(\"system\", `No memories matched “${query}”.`)]);\n          return;\n        }\n        const formatted = hits.map((item, idx) => {\n          var _ref, _item$memory;\n          const memoryText = (_ref = (_item$memory = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory !== void 0 ? _item$memory : item === null || item === void 0 ? void 0 : item.value) !== null && _ref !== void 0 ? _ref : JSON.stringify(item);\n          return `${idx + 1}. ${memoryText}`;\n        }).join(\"\\n\\n\");\n        setMessages(prev => [...prev, createMessage(\"system\", `🔍 Search results for “${query}”:\\n\\n${formatted}`)]);\n      } catch (error) {\n        console.error(error);\n        setMessages(prev => [...prev, createMessage(\"system\", \"⚠️ Could not reach the search API.\")]);\n      }\n      return;\n    }\n    if (normalized === \"all\") {\n      try {\n        const url = new URL(`${API_BASE}/all`);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          setMessages(prev => [...prev, createMessage(\"system\", `❌ Fetch failed: ${text || res.statusText}`)]);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          setMessages(prev => [...prev, createMessage(\"system\", \"No stored memories yet.\")]);\n          return;\n        }\n        const formatted = memories.map((item, idx) => {\n          var _item$metadata, _ref2, _item$memory2;\n          const meta = item !== null && item !== void 0 && (_item$metadata = item.metadata) !== null && _item$metadata !== void 0 && _item$metadata.type ? ` (${item.metadata.type})` : \"\";\n          const base = (_ref2 = (_item$memory2 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory2 !== void 0 ? _item$memory2 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref2 !== void 0 ? _ref2 : JSON.stringify(item);\n          return `${idx + 1}. ${base}${meta}`;\n        }).join(\"\\n\\n\");\n        setMessages(prev => [...prev, createMessage(\"system\", `🗂️ Complete memory listing:\\n\\n${formatted}`)]);\n      } catch (error) {\n        console.error(error);\n        setMessages(prev => [...prev, createMessage(\"system\", \"⚠️ Could not fetch stored memories.\")]);\n      }\n      return;\n    }\n    if (normalized === \"reset\") {\n      try {\n        const res = await fetch(`${API_BASE}/reset`, {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          setMessages(prev => [...prev, createMessage(\"system\", `❌ Reset failed: ${text || res.statusText}`)]);\n          return;\n        }\n        const data = await res.json();\n        setMessages(prev => {\n          var _data$message;\n          return [...prev, createMessage(\"system\", (_data$message = data === null || data === void 0 ? void 0 : data.message) !== null && _data$message !== void 0 ? _data$message : \"Memory reset complete.\")];\n        });\n      } catch (error) {\n        console.error(error);\n        setMessages(prev => [...prev, createMessage(\"system\", \"⚠️ Could not reach the reset endpoint.\")]);\n      }\n      return;\n    }\n    if (normalized === \"help\") {\n      setMessages(prev => [...prev, createMessage(\"system\", [\"Available commands:\", \"/search <keywords> — find stored memories\", \"/all — show every memory\", \"/reset — clear the vector store\", \"/help — show this help\"].join(\"\\n\"))]);\n      return;\n    }\n    setMessages(prev => [...prev, createMessage(\"system\", `Unknown command “/${normalized}”. Try /help.`)]);\n  };\n  const handleNewChat = () => {\n    setMessages([createMessage(\"system\", \"New chat started. Say hello to initialise a session and begin capturing context.\")]);\n    setSessionId(null);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"chat-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"sidebar-title\",\n              children: \"Mem0 Classroom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sidebar-subtitle\",\n              children: \"Fully local tutor (Ollama + Qdrant)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ghost-button\",\n            onClick: handleNewChat,\n            children: \"New chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), sessionId ? /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"session-chip\",\n            children: sessionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No active session yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Shortcuts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"command-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"command\",\n                children: \"/search <keywords>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Look up relevant memories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"command\",\n                children: \"/all\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"List every stored memory\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"command\",\n                children: \"/reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Clear local memory store\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"command\",\n                children: \"/help\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Show command reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"chat-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chat-header-title\",\n              children: \"AI Student Mentor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chat-header-subtitle\",\n              children: \"Guide the learner and the assistant will respond with grounded context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-badge ${isSending ? \"typing\" : \"idle\"}`,\n            children: isSending ? \"Generating…\" : \"Idle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"message-list\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"article\", {\n            className: `message-row ${message.role}`,\n            \"aria-label\": `${ROLE_META[message.role].label} message`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-avatar ${message.role}`,\n              children: ROLE_META[message.role].initial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-bubble ${message.role}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: ROLE_META[message.role].label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: formatTime(message.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)), isSending && /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"message-row student typing\",\n            \"aria-live\": \"polite\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar student\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble student\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: \"Student\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: \"\\u2026\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: bottomRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"chat-textarea\",\n            placeholder: \"Send a prompt or /command. Press Enter to send, Shift+Enter for a new line.\",\n            value: input,\n            disabled: isSending,\n            onChange: event => setInput(event.target.value),\n            onKeyDown: async event => {\n              if (event.key === \"Enter\" && !event.shiftKey) {\n                event.preventDefault();\n                await processInput(input);\n              }\n            },\n            rows: Math.min(6, input.split(\"\\n\").length + 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"secondary-button\",\n              onClick: () => setInput(prev => prev + \"\\n\"),\n              disabled: isSending,\n              children: \"New line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"primary-button\",\n              disabled: isSending,\n              children: isSending ? \"Sending…\" : \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"NHayoJ+FfvBZfw9LDzOY3h9+b2g=\");\n_c = ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","API_BASE","createMessage","role","text","id","Date","now","Math","random","toString","slice","createdAt","toISOString","formatTime","iso","toLocaleTimeString","hour","minute","ROLE_META","teacher","label","initial","student","system","ChatApp","_s","messages","setMessages","input","setInput","sessionId","setSessionId","isSending","setIsSending","bottomRef","_bottomRef$current","current","scrollIntoView","behavior","processInput","rawInput","trimmed","trim","isCommand","startsWith","prev","handleCommand","sendPrompt","handleSubmit","event","preventDefault","prompt","teacherMessage","_data$session_id","url","URL","searchParams","set","response","fetch","method","ok","errorText","statusText","data","json","session_id","assistantReply","length","error","console","rawCommand","commandToken","args","split","normalized","toLowerCase","query","join","_data$results","res","hits","Array","isArray","results","formatted","map","item","idx","_ref","_item$memory","memoryText","memory","value","JSON","stringify","memories","_item$metadata","_ref2","_item$memory2","meta","metadata","type","base","_data$message","message","handleNewChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","onSubmit","placeholder","disabled","onChange","target","onKeyDown","key","shiftKey","rows","min","_c","$RefreshReg$"],"sources":["/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx"],"sourcesContent":["import React, { FormEvent, useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\ntype MessageRole = \"teacher\" | \"student\" | \"system\";\n\ntype Message = {\n  id: string;\n  role: MessageRole;\n  text: string;\n  createdAt: string;\n};\n\nconst API_BASE = \"http://127.0.0.1:8000\";\n\nconst createMessage = (role: MessageRole, text: string): Message => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString(),\n});\n\nconst formatTime = (iso: string) =>\n  new Date(iso).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nconst ROLE_META: Record<MessageRole, { label: string; initial: string }> = {\n  teacher: { label: \"Teacher\", initial: \"T\" },\n  student: { label: \"Student\", initial: \"S\" },\n  system: { label: \"System\", initial: \"ℹ\" },\n};\n\nexport default function ChatApp() {\n  const [messages, setMessages] = useState<Message[]>(() => [\n    createMessage(\n      \"system\",\n      \"Welcome! Start the lesson to see the student's recall evolve. Use /search <keywords> to review stored memories.\"\n    ),\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState<string | null>(null);\n  const [isSending, setIsSending] = useState(false);\n\n  const bottomRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, isSending]);\n\n  const processInput = async (rawInput: string) => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n\n    const isCommand = trimmed.startsWith(\"/\");\n    if (isSending && !isCommand) return;\n\n    setInput(\"\");\n\n    if (isCommand) {\n      setMessages((prev) => [...prev, createMessage(\"teacher\", trimmed)]);\n      await handleCommand(trimmed);\n      return;\n    }\n\n    await sendPrompt(trimmed);\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    await processInput(input);\n  };\n\n  const sendPrompt = async (prompt: string) => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages((prev) => [...prev, teacherMessage]);\n    setIsSending(true);\n\n    try {\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n\n      const response = await fetch(url.toString(), { method: \"POST\" });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", `❌ Server error: ${errorText || response.statusText}`),\n        ]);\n        return;\n      }\n\n      const data = await response.json();\n      setSessionId(data.session_id ?? sessionId);\n\n      const assistantReply =\n        typeof data.response === \"string\" && data.response.trim().length > 0\n          ? data.response.trim()\n          : \"I did not receive a response from the model.\";\n\n      setMessages((prev) => [...prev, createMessage(\"student\", assistantReply)]);\n    } catch (error) {\n      console.error(error);\n      setMessages((prev) => [\n        ...prev,\n        createMessage(\"system\", \"⚠️ Connection error. Confirm the FastAPI server is running.\"),\n      ]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  const handleCommand = async (rawCommand: string) => {\n    const [commandToken, ...args] = rawCommand.slice(1).trim().split(/\\s+/);\n    if (!commandToken) {\n      return;\n    }\n\n    const normalized = commandToken.toLowerCase();\n\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", \"Usage: /search <keywords>\"),\n        ]);\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          setMessages((prev) => [\n            ...prev,\n            createMessage(\"system\", `❌ Search failed: ${text || res.statusText}`),\n          ]);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results?.results)\n          ? data.results.results\n          : Array.isArray(data.results)\n          ? data.results\n          : [];\n\n        if (hits.length === 0) {\n          setMessages((prev) => [\n            ...prev,\n            createMessage(\"system\", `No memories matched “${query}”.`),\n          ]);\n          return;\n        }\n\n        const formatted = hits\n          .map((item: any, idx: number) => {\n            const memoryText = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${idx + 1}. ${memoryText}`;\n          })\n          .join(\"\\n\\n\");\n\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", `🔍 Search results for “${query}”:\\n\\n${formatted}`),\n        ]);\n      } catch (error) {\n        console.error(error);\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", \"⚠️ Could not reach the search API.\"),\n        ]);\n      }\n      return;\n    }\n\n    if (normalized === \"all\") {\n      try {\n        const url = new URL(`${API_BASE}/all`);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          setMessages((prev) => [\n            ...prev,\n            createMessage(\"system\", `❌ Fetch failed: ${text || res.statusText}`),\n          ]);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          setMessages((prev) => [\n            ...prev,\n            createMessage(\"system\", \"No stored memories yet.\"),\n          ]);\n          return;\n        }\n        const formatted = memories\n          .map((item: any, idx: number) => {\n            const meta = item?.metadata?.type ? ` (${item.metadata.type})` : \"\";\n            const base = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${idx + 1}. ${base}${meta}`;\n          })\n          .join(\"\\n\\n\");\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", `🗂️ Complete memory listing:\\n\\n${formatted}`),\n        ]);\n      } catch (error) {\n        console.error(error);\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", \"⚠️ Could not fetch stored memories.\"),\n        ]);\n      }\n      return;\n    }\n\n    if (normalized === \"reset\") {\n      try {\n        const res = await fetch(`${API_BASE}/reset`, { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          setMessages((prev) => [\n            ...prev,\n            createMessage(\"system\", `❌ Reset failed: ${text || res.statusText}`),\n          ]);\n          return;\n        }\n        const data = await res.json();\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", data?.message ?? \"Memory reset complete.\"),\n        ]);\n      } catch (error) {\n        console.error(error);\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", \"⚠️ Could not reach the reset endpoint.\"),\n        ]);\n      }\n      return;\n    }\n\n    if (normalized === \"help\") {\n      setMessages((prev) => [\n        ...prev,\n        createMessage(\n          \"system\",\n          [\n            \"Available commands:\",\n            \"/search <keywords> — find stored memories\",\n            \"/all — show every memory\",\n            \"/reset — clear the vector store\",\n            \"/help — show this help\",\n          ].join(\"\\n\")\n        ),\n      ]);\n      return;\n    }\n\n    setMessages((prev) => [\n      ...prev,\n      createMessage(\"system\", `Unknown command “/${normalized}”. Try /help.`),\n    ]);\n  };\n\n  const handleNewChat = () => {\n    setMessages([\n      createMessage(\n        \"system\",\n        \"New chat started. Say hello to initialise a session and begin capturing context.\"\n      ),\n    ]);\n    setSessionId(null);\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"chat-shell\">\n        <aside className=\"chat-sidebar\">\n          <div className=\"sidebar-header\">\n            <div>\n              <h1 className=\"sidebar-title\">Mem0 Classroom</h1>\n              <p className=\"sidebar-subtitle\">Fully local tutor (Ollama + Qdrant)</p>\n            </div>\n            <button className=\"ghost-button\" onClick={handleNewChat}>\n              New chat\n            </button>\n          </div>\n\n          <div className=\"sidebar-section\">\n            <h2>Session</h2>\n            {sessionId ? (\n              <code className=\"session-chip\">{sessionId}</code>\n            ) : (\n              <p>No active session yet.</p>\n            )}\n          </div>\n\n          <div className=\"sidebar-section\">\n            <h2>Shortcuts</h2>\n            <ul className=\"command-list\">\n              <li>\n                <span className=\"command\">/search &lt;keywords&gt;</span>\n                <span>Look up relevant memories</span>\n              </li>\n              <li>\n                <span className=\"command\">/all</span>\n                <span>List every stored memory</span>\n              </li>\n              <li>\n                <span className=\"command\">/reset</span>\n                <span>Clear local memory store</span>\n              </li>\n              <li>\n                <span className=\"command\">/help</span>\n                <span>Show command reference</span>\n              </li>\n            </ul>\n          </div>\n        </aside>\n\n        <main className=\"chat-main\">\n          <header className=\"chat-header\">\n            <div>\n              <h2 className=\"chat-header-title\">AI Student Mentor</h2>\n              <p className=\"chat-header-subtitle\">\n                Guide the learner and the assistant will respond with grounded context.\n              </p>\n            </div>\n            <span className={`status-badge ${isSending ? \"typing\" : \"idle\"}`}>\n              {isSending ? \"Generating…\" : \"Idle\"}\n            </span>\n          </header>\n\n          <section className=\"message-list\">\n            {messages.map((message) => (\n              <article\n                key={message.id}\n                className={`message-row ${message.role}`}\n                aria-label={`${ROLE_META[message.role].label} message`}\n              >\n                <div className={`message-avatar ${message.role}`}>\n                  {ROLE_META[message.role].initial}\n                </div>\n                <div className={`message-bubble ${message.role}`}>\n                  <div className=\"message-meta\">\n                    <span className=\"role\">{ROLE_META[message.role].label}</span>\n                    <span className=\"time\">{formatTime(message.createdAt)}</span>\n                  </div>\n                  <div className=\"message-text\">{message.text}</div>\n                </div>\n              </article>\n            ))}\n\n            {isSending && (\n              <article className=\"message-row student typing\" aria-live=\"polite\">\n                <div className=\"message-avatar student\">S</div>\n                <div className=\"message-bubble student\">\n                  <div className=\"message-meta\">\n                    <span className=\"role\">Student</span>\n                    <span className=\"time\">…</span>\n                  </div>\n                  <div className=\"typing-indicator\">\n                    <span />\n                    <span />\n                    <span />\n                  </div>\n                </div>\n              </article>\n            )}\n            <div ref={bottomRef} />\n          </section>\n\n          <form className=\"chat-input\" onSubmit={handleSubmit}>\n            <textarea\n              className=\"chat-textarea\"\n              placeholder=\"Send a prompt or /command. Press Enter to send, Shift+Enter for a new line.\"\n              value={input}\n              disabled={isSending}\n              onChange={(event) => setInput(event.target.value)}\n              onKeyDown={async (event) => {\n                if (event.key === \"Enter\" && !event.shiftKey) {\n                  event.preventDefault();\n                  await processInput(input);\n                }\n              }}\n              rows={Math.min(6, input.split(\"\\n\").length + 1)}\n            />\n            <div className=\"chat-actions\">\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={() => setInput((prev) => prev + \"\\n\")}\n                disabled={isSending}\n              >\n                New line\n              </button>\n              <button type=\"submit\" className=\"primary-button\" disabled={isSending}>\n                {isSending ? \"Sending…\" : \"Send\"}\n              </button>\n            </div>\n          </form>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}