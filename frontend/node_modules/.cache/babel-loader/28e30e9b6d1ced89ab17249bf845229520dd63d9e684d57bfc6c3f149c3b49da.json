{"ast":null,"code":"var _jsxFileName = \"/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://127.0.0.1:8000\";\nconst COMMANDS = [{\n  name: \"topic\",\n  usage: \"/topic <new_topic>\",\n  description: \"Switch the current lesson topic\"\n}, {\n  name: \"session\",\n  usage: \"/session new\",\n  description: \"Start a brand-new session\"\n}, {\n  name: \"summary\",\n  usage: \"/summary\",\n  description: \"Summarize the active session\"\n}, {\n  name: \"search_topic\",\n  usage: \"/search_topic <keywords>\",\n  description: \"Search every stored memory for keywords\"\n}, {\n  name: \"all\",\n  usage: \"/all\",\n  description: \"List every stored memory entry\"\n}, {\n  name: \"reset\",\n  usage: \"/reset\",\n  description: \"Clear the entire local memory store\"\n}, {\n  name: \"help\",\n  usage: \"/help\",\n  description: \"Display the command reference\"\n}, {\n  name: \"search\",\n  usage: \"/search <keywords>\",\n  description: \"Legacy search on the active filters\"\n}];\nconst createMessage = (role, text) => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString()\n});\nconst formatTime = iso => new Date(iso).toLocaleTimeString([], {\n  hour: \"2-digit\",\n  minute: \"2-digit\"\n});\nconst ROLE_META = {\n  teacher: {\n    label: \"Teacher\",\n    initial: \"T\"\n  },\n  student: {\n    label: \"Student\",\n    initial: \"S\"\n  },\n  system: {\n    label: \"System\",\n    initial: \"‚Ñπ\"\n  }\n};\nexport default function ChatApp() {\n  _s();\n  const [messages, setMessages] = useState(() => [createMessage(\"system\", \"Welcome! Let‚Äôs start when you‚Äôre ready to teach.\")]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState(null);\n  const [isSending, setIsSending] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [commandQuery, setCommandQuery] = useState(\"\");\n  const [teachMode, setTeachMode] = useState(false);\n  const bottomRef = useRef(null);\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, isSending]);\n  useEffect(() => {\n    const fetchTeachMode = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/teach_mode`);\n        if (!res.ok) {\n          return;\n        }\n        const data = await res.json();\n        setTeachMode(Boolean(data === null || data === void 0 ? void 0 : data.teach_mode));\n      } catch (error) {\n        console.error(\"Failed to load Teach Mode state\", error);\n      }\n    };\n    fetchTeachMode();\n  }, []);\n  const filteredCommands = useMemo(() => {\n    if (!showSuggestions) {\n      return [];\n    }\n    const token = commandQuery.trim();\n    if (!token) {\n      return COMMANDS;\n    }\n    return COMMANDS.filter(cmd => cmd.name.toLowerCase().includes(token) || cmd.usage.toLowerCase().includes(token));\n  }, [commandQuery, showSuggestions]);\n  const closeCommandPalette = () => {\n    setShowSuggestions(false);\n    setCommandQuery(\"\");\n  };\n  const handleInputChange = value => {\n    setInput(value);\n    if (value.startsWith(\"/\")) {\n      const afterSlash = value.slice(1).toLowerCase();\n      const [firstToken = \"\"] = afterSlash.split(/\\s+/);\n      setShowSuggestions(true);\n      setCommandQuery(firstToken);\n    } else {\n      closeCommandPalette();\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([createMessage(\"system\", \"New chat started. Use /topic <subject> when you're ready to begin teaching.\")]);\n    setSessionId(null);\n    setInput(\"\");\n    closeCommandPalette();\n  };\n  const processInput = async rawInput => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n    setInput(\"\");\n    if (trimmed.startsWith(\"/\")) {\n      closeCommandPalette();\n      await handleCommand(trimmed);\n      return;\n    }\n    closeCommandPalette();\n    await sendPrompt(trimmed);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await processInput(input);\n  };\n  const sendPrompt = async prompt => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages(prev => [...prev, teacherMessage]);\n    setIsSending(true);\n    try {\n      var _data$session_id;\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n      const response = await fetch(url.toString(), {\n        method: \"POST\"\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages(prev => [...prev, createMessage(\"system\", `‚ùå Server error: ${errorText || response.statusText}`)]);\n        return;\n      }\n      const data = await response.json();\n      setSessionId((_data$session_id = data.session_id) !== null && _data$session_id !== void 0 ? _data$session_id : sessionId);\n      const assistantReply = typeof data.response === \"string\" && data.response.trim().length > 0 ? data.response.trim() : \"I did not receive a response from the model.\";\n      setMessages(prev => [...prev, createMessage(\"student\", assistantReply)]);\n    } catch (error) {\n      console.error(error);\n      setMessages(prev => [...prev, createMessage(\"system\", \"‚ö†Ô∏è Connection error. Confirm the FastAPI server is running.\")]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n  const handleCommand = async rawCommand => {\n    const stripped = rawCommand.slice(1).trim();\n    const commandMessage = createMessage(\"teacher\", rawCommand);\n    if (!stripped) {\n      setMessages(prev => [...prev, commandMessage, createMessage(\"system\", \"Type /help to see the available commands.\")]);\n      return;\n    }\n    const [commandToken, ...args] = stripped.split(/\\s+/);\n    const normalized = commandToken.toLowerCase();\n    const appendSystem = (...systemTexts) => {\n      setMessages(prev => [...prev, commandMessage, ...systemTexts.map(text => createMessage(\"system\", text))]);\n    };\n    if (normalized === \"topic\") {\n      const topic = args.join(\" \").trim();\n      if (!topic) {\n        appendSystem(\"Usage: /topic <new_topic>\");\n        return;\n      }\n      try {\n        var _data$message;\n        const url = new URL(`${API_BASE}/topic`);\n        url.searchParams.set(\"new_topic\", topic);\n        const res = await fetch(url.toString(), {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Topic update failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem((_data$message = data.message) !== null && _data$message !== void 0 ? _data$message : `‚úÖ Topic set to '${topic}'.`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the topic endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"session\") {\n      const sub = (args[0] || \"\").toLowerCase();\n      if (sub === \"new\") {\n        try {\n          var _data$session_id2;\n          const res = await fetch(`${API_BASE}/session`, {\n            method: \"POST\"\n          });\n          if (!res.ok) {\n            const text = await res.text();\n            appendSystem(`‚ùå Session start failed: ${text || res.statusText}`);\n            return;\n          }\n          const data = await res.json();\n          handleNewChat();\n          setSessionId((_data$session_id2 = data.session_id) !== null && _data$session_id2 !== void 0 ? _data$session_id2 : null);\n          setMessages(prev => {\n            var _data$message2;\n            return [...prev, commandMessage, createMessage(\"system\", (_data$message2 = data.message) !== null && _data$message2 !== void 0 ? _data$message2 : \"üÜï New session started.\")];\n          });\n        } catch (error) {\n          console.error(error);\n          appendSystem(\"‚ö†Ô∏è Could not start a new session.\");\n        }\n      } else {\n        appendSystem(\"Usage: /session new\");\n      }\n      return;\n    }\n    if (normalized === \"summary\") {\n      if (!sessionId) {\n        appendSystem(\"No active session. Use /session new to begin.\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/summary`);\n        url.searchParams.set(\"session_id\", sessionId);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Summary failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const summary = typeof data.summary === \"string\" ? data.summary : JSON.stringify(data.summary);\n        appendSystem(`üìò Session summary:\\n\\n${summary}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not retrieve the summary.\");\n      }\n      return;\n    }\n    if (normalized === \"search_topic\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search_topic <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search_topic`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Topic search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched ‚Äú${query}‚Äù.`);\n          return;\n        }\n        const formatted = hits.map((item, index) => {\n          var _item$memory, _item$score$toFixed, _item$score, _item$score$toFixed2;\n          return `${index + 1}. ${(_item$memory = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory !== void 0 ? _item$memory : \"‚Äî\"}\\n   score: ${(_item$score$toFixed = item === null || item === void 0 ? void 0 : (_item$score = item.score) === null || _item$score === void 0 ? void 0 : (_item$score$toFixed2 = _item$score.toFixed) === null || _item$score$toFixed2 === void 0 ? void 0 : _item$score$toFixed2.call(_item$score, 3)) !== null && _item$score$toFixed !== void 0 ? _item$score$toFixed : \"?\"}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`üîç Memories mentioning ‚Äú${query}‚Äù:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the search endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search <keywords>\");\n        return;\n      }\n      try {\n        var _data$results;\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray((_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.results) ? data.results.results : Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched ‚Äú${query}‚Äù.`);\n          return;\n        }\n        const formatted = hits.map((item, index) => {\n          var _ref, _item$memory2;\n          const memoryText = (_ref = (_item$memory2 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory2 !== void 0 ? _item$memory2 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref !== void 0 ? _ref : JSON.stringify(item);\n          return `${index + 1}. ${memoryText}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`üîç Search results for ‚Äú${query}‚Äù:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the search API.\");\n      }\n      return;\n    }\n    if (normalized === \"all\") {\n      try {\n        const res = await fetch(`${API_BASE}/all`);\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Fetch failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          appendSystem(\"No stored memories yet.\");\n          return;\n        }\n        const formatted = memories.map((item, index) => {\n          var _item$metadata, _ref2, _item$memory3;\n          const meta = item !== null && item !== void 0 && (_item$metadata = item.metadata) !== null && _item$metadata !== void 0 && _item$metadata.type ? ` (${item.metadata.type})` : \"\";\n          const base = (_ref2 = (_item$memory3 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory3 !== void 0 ? _item$memory3 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref2 !== void 0 ? _ref2 : JSON.stringify(item);\n          return `${index + 1}. ${base}${meta}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`üóÇÔ∏è Complete memory listing:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not fetch stored memories.\");\n      }\n      return;\n    }\n    if (normalized === \"reset\") {\n      try {\n        var _data$message3;\n        const res = await fetch(`${API_BASE}/reset`, {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Reset failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem((_data$message3 = data === null || data === void 0 ? void 0 : data.message) !== null && _data$message3 !== void 0 ? _data$message3 : \"Memory reset complete.\");\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the reset endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"help\") {\n      const helpText = COMMANDS.map(cmd => `${cmd.usage} ‚Äî ${cmd.description}`).join(\"\\n\");\n      appendSystem(helpText);\n      return;\n    }\n    appendSystem(`Unknown command ‚Äú/${normalized}‚Äù. Try /help.`);\n  };\n  const applyCommandTemplate = command => {\n    const template = command.usage.endsWith(\" \") ? command.usage : `${command.usage} `;\n    setInput(template);\n    setCommandQuery(\"\");\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"chat-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"sidebar-title\",\n              children: \"Mem0 Classroom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sidebar-subtitle\",\n              children: \"Fully local tutor (Ollama + Qdrant)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ghost-button\",\n            onClick: handleNewChat,\n            children: \"New chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), sessionId ? /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"session-chip\",\n            children: sessionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No active session yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"chat-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chat-header-title\",\n              children: \"AI Student Mentor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chat-header-subtitle\",\n              children: \"Guide the learner and the assistant will respond with grounded context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-badge ${isSending ? \"typing\" : \"idle\"}`,\n            children: isSending ? \"Generating‚Ä¶\" : \"Idle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"message-list\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"article\", {\n            className: `message-row ${message.role}`,\n            \"aria-label\": `${ROLE_META[message.role].label} message`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-avatar ${message.role}`,\n              children: ROLE_META[message.role].initial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-bubble ${message.role}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: ROLE_META[message.role].label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: formatTime(message.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)), isSending && /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"message-row student typing\",\n            \"aria-live\": \"polite\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar student\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble student\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: \"Student\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: \"\\u2026\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: bottomRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-textarea-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chat-textarea\",\n              placeholder: \"Send a prompt or /command. Press Enter to send, Shift+Enter for a new line.\",\n              value: input,\n              disabled: isSending,\n              onChange: event => handleInputChange(event.target.value),\n              onKeyDown: async event => {\n                if (event.key === \"Escape\" && showSuggestions) {\n                  event.preventDefault();\n                  closeCommandPalette();\n                  return;\n                }\n                if (event.key === \"Tab\" && showSuggestions && filteredCommands.length > 0) {\n                  event.preventDefault();\n                  applyCommandTemplate(filteredCommands[0]);\n                  return;\n                }\n                if (event.key === \"Enter\" && !event.shiftKey) {\n                  event.preventDefault();\n                  await processInput(input);\n                }\n              },\n              rows: Math.min(6, input.split(\"\\n\").length + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this), showSuggestions && filteredCommands.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"command-suggestions\",\n              children: filteredCommands.map(cmd => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"command-suggestion\",\n                onMouseDown: event => {\n                  event.preventDefault();\n                  applyCommandTemplate(cmd);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: cmd.usage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: cmd.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this)]\n              }, cmd.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"secondary-button\",\n              onClick: () => setInput(prev => `${prev}\\n`),\n              disabled: isSending,\n              children: \"New line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"primary-button\",\n              disabled: isSending,\n              children: isSending ? \"Sending‚Ä¶\" : \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"RIl3mlTBoHzHEI8l3Sl8ZpcPHZU=\");\n_c = ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","API_BASE","COMMANDS","name","usage","description","createMessage","role","text","id","Date","now","Math","random","toString","slice","createdAt","toISOString","formatTime","iso","toLocaleTimeString","hour","minute","ROLE_META","teacher","label","initial","student","system","ChatApp","_s","messages","setMessages","input","setInput","sessionId","setSessionId","isSending","setIsSending","showSuggestions","setShowSuggestions","commandQuery","setCommandQuery","teachMode","setTeachMode","bottomRef","_bottomRef$current","current","scrollIntoView","behavior","fetchTeachMode","res","fetch","ok","data","json","Boolean","teach_mode","error","console","filteredCommands","token","trim","filter","cmd","toLowerCase","includes","closeCommandPalette","handleInputChange","value","startsWith","afterSlash","firstToken","split","handleNewChat","processInput","rawInput","trimmed","handleCommand","sendPrompt","handleSubmit","event","preventDefault","prompt","teacherMessage","prev","_data$session_id","url","URL","searchParams","set","response","method","errorText","statusText","session_id","assistantReply","length","rawCommand","stripped","commandMessage","commandToken","args","normalized","appendSystem","systemTexts","map","topic","join","_data$message","message","sub","_data$session_id2","_data$message2","summary","JSON","stringify","query","hits","Array","isArray","results","formatted","item","index","_item$memory","_item$score$toFixed","_item$score","_item$score$toFixed2","memory","score","toFixed","call","_data$results","_ref","_item$memory2","memoryText","memories","_item$metadata","_ref2","_item$memory3","meta","metadata","type","base","_data$message3","helpText","applyCommandTemplate","command","template","endsWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","onSubmit","placeholder","disabled","onChange","target","onKeyDown","key","shiftKey","rows","min","onMouseDown","_c","$RefreshReg$"],"sources":["/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx"],"sourcesContent":["import React, { FormEvent, useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\n\ntype MessageRole = \"teacher\" | \"student\" | \"system\";\n\ntype Message = {\n  id: string;\n  role: MessageRole;\n  text: string;\n  createdAt: string;\n};\n\ntype CommandDefinition = {\n  name: string;\n  usage: string;\n  description: string;\n};\n\nconst API_BASE = \"http://127.0.0.1:8000\";\n\nconst COMMANDS: CommandDefinition[] = [\n  {\n    name: \"topic\",\n    usage: \"/topic <new_topic>\",\n    description: \"Switch the current lesson topic\",\n  },\n  {\n    name: \"session\",\n    usage: \"/session new\",\n    description: \"Start a brand-new session\",\n  },\n  {\n    name: \"summary\",\n    usage: \"/summary\",\n    description: \"Summarize the active session\",\n  },\n  {\n    name: \"search_topic\",\n    usage: \"/search_topic <keywords>\",\n    description: \"Search every stored memory for keywords\",\n  },\n  {\n    name: \"all\",\n    usage: \"/all\",\n    description: \"List every stored memory entry\",\n  },\n  {\n    name: \"reset\",\n    usage: \"/reset\",\n    description: \"Clear the entire local memory store\",\n  },\n  {\n    name: \"help\",\n    usage: \"/help\",\n    description: \"Display the command reference\",\n  },\n  {\n    name: \"search\",\n    usage: \"/search <keywords>\",\n    description: \"Legacy search on the active filters\",\n  },\n];\n\nconst createMessage = (role: MessageRole, text: string): Message => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString(),\n});\n\nconst formatTime = (iso: string) =>\n  new Date(iso).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nconst ROLE_META: Record<MessageRole, { label: string; initial: string }> = {\n  teacher: { label: \"Teacher\", initial: \"T\" },\n  student: { label: \"Student\", initial: \"S\" },\n  system: { label: \"System\", initial: \"‚Ñπ\" },\n};\n\nexport default function ChatApp() {\n  const [messages, setMessages] = useState<Message[]>(() => [\n    createMessage(\"system\", \"Welcome! Let‚Äôs start when you‚Äôre ready to teach.\"),\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState<string | null>(null);\n  const [isSending, setIsSending] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [commandQuery, setCommandQuery] = useState(\"\");\n  const [teachMode, setTeachMode] = useState(false);\n\n  const bottomRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, isSending]);\n\n  useEffect(() => {\n    const fetchTeachMode = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/teach_mode`);\n        if (!res.ok) {\n          return;\n        }\n        const data = await res.json();\n        setTeachMode(Boolean(data?.teach_mode));\n      } catch (error) {\n        console.error(\"Failed to load Teach Mode state\", error);\n      }\n    };\n\n    fetchTeachMode();\n  }, []);\n\n  const filteredCommands = useMemo(() => {\n    if (!showSuggestions) {\n      return [];\n    }\n    const token = commandQuery.trim();\n    if (!token) {\n      return COMMANDS;\n    }\n    return COMMANDS.filter((cmd) =>\n      cmd.name.toLowerCase().includes(token) || cmd.usage.toLowerCase().includes(token)\n    );\n  }, [commandQuery, showSuggestions]);\n\n  const closeCommandPalette = () => {\n    setShowSuggestions(false);\n    setCommandQuery(\"\");\n  };\n\n  const handleInputChange = (value: string) => {\n    setInput(value);\n    if (value.startsWith(\"/\")) {\n      const afterSlash = value.slice(1).toLowerCase();\n      const [firstToken = \"\"] = afterSlash.split(/\\s+/);\n      setShowSuggestions(true);\n      setCommandQuery(firstToken);\n    } else {\n      closeCommandPalette();\n    }\n  };\n\n  const handleNewChat = () => {\n    setMessages([\n      createMessage(\n        \"system\",\n        \"New chat started. Use /topic <subject> when you're ready to begin teaching.\"\n      ),\n    ]);\n    setSessionId(null);\n    setInput(\"\");\n    closeCommandPalette();\n  };\n\n  const processInput = async (rawInput: string) => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n\n    setInput(\"\");\n\n    if (trimmed.startsWith(\"/\")) {\n      closeCommandPalette();\n      await handleCommand(trimmed);\n      return;\n    }\n\n    closeCommandPalette();\n    await sendPrompt(trimmed);\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    await processInput(input);\n  };\n\n  const sendPrompt = async (prompt: string) => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages((prev) => [...prev, teacherMessage]);\n    setIsSending(true);\n\n    try {\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n\n      const response = await fetch(url.toString(), { method: \"POST\" });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", `‚ùå Server error: ${errorText || response.statusText}`),\n        ]);\n        return;\n      }\n\n      const data = await response.json();\n      setSessionId(data.session_id ?? sessionId);\n\n      const assistantReply =\n        typeof data.response === \"string\" && data.response.trim().length > 0\n          ? data.response.trim()\n          : \"I did not receive a response from the model.\";\n\n      setMessages((prev) => [...prev, createMessage(\"student\", assistantReply)]);\n    } catch (error) {\n      console.error(error);\n      setMessages((prev) => [\n        ...prev,\n        createMessage(\"system\", \"‚ö†Ô∏è Connection error. Confirm the FastAPI server is running.\"),\n      ]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  const handleCommand = async (rawCommand: string) => {\n    const stripped = rawCommand.slice(1).trim();\n    const commandMessage = createMessage(\"teacher\", rawCommand);\n\n    if (!stripped) {\n      setMessages((prev) => [\n        ...prev,\n        commandMessage,\n        createMessage(\"system\", \"Type /help to see the available commands.\"),\n      ]);\n      return;\n    }\n\n    const [commandToken, ...args] = stripped.split(/\\s+/);\n    const normalized = commandToken.toLowerCase();\n\n    const appendSystem = (...systemTexts: string[]) => {\n      setMessages((prev) => [\n        ...prev,\n        commandMessage,\n        ...systemTexts.map((text) => createMessage(\"system\", text)),\n      ]);\n    };\n\n    if (normalized === \"topic\") {\n      const topic = args.join(\" \").trim();\n      if (!topic) {\n        appendSystem(\"Usage: /topic <new_topic>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/topic`);\n        url.searchParams.set(\"new_topic\", topic);\n        const res = await fetch(url.toString(), { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Topic update failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem(data.message ?? `‚úÖ Topic set to '${topic}'.`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the topic endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"session\") {\n      const sub = (args[0] || \"\").toLowerCase();\n      if (sub === \"new\") {\n        try {\n          const res = await fetch(`${API_BASE}/session`, { method: \"POST\" });\n          if (!res.ok) {\n            const text = await res.text();\n            appendSystem(`‚ùå Session start failed: ${text || res.statusText}`);\n            return;\n          }\n          const data = await res.json();\n          handleNewChat();\n          setSessionId(data.session_id ?? null);\n          setMessages((prev) => [\n            ...prev,\n            commandMessage,\n            createMessage(\"system\", data.message ?? \"üÜï New session started.\"),\n          ]);\n        } catch (error) {\n          console.error(error);\n          appendSystem(\"‚ö†Ô∏è Could not start a new session.\");\n        }\n      } else {\n        appendSystem(\"Usage: /session new\");\n      }\n      return;\n    }\n\n    if (normalized === \"summary\") {\n      if (!sessionId) {\n        appendSystem(\"No active session. Use /session new to begin.\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/summary`);\n        url.searchParams.set(\"session_id\", sessionId);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Summary failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const summary = typeof data.summary === \"string\" ? data.summary : JSON.stringify(data.summary);\n        appendSystem(`üìò Session summary:\\n\\n${summary}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not retrieve the summary.\");\n      }\n      return;\n    }\n\n    if (normalized === \"search_topic\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search_topic <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search_topic`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Topic search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched ‚Äú${query}‚Äù.`);\n          return;\n        }\n        const formatted = hits\n          .map(\n            (item: any, index: number) =>\n              `${index + 1}. ${item?.memory ?? \"‚Äî\"}\\n   score: ${item?.score?.toFixed?.(3) ?? \"?\"}`\n          )\n          .join(\"\\n\\n\");\n        appendSystem(`üîç Memories mentioning ‚Äú${query}‚Äù:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the search endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results?.results)\n          ? data.results.results\n          : Array.isArray(data.results)\n          ? data.results\n          : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched ‚Äú${query}‚Äù.`);\n          return;\n        }\n        const formatted = hits\n          .map((item: any, index: number) => {\n            const memoryText = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${index + 1}. ${memoryText}`;\n          })\n          .join(\"\\n\\n\");\n        appendSystem(`üîç Search results for ‚Äú${query}‚Äù:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the search API.\");\n      }\n      return;\n    }\n\n    if (normalized === \"all\") {\n      try {\n        const res = await fetch(`${API_BASE}/all`);\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Fetch failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          appendSystem(\"No stored memories yet.\");\n          return;\n        }\n        const formatted = memories\n          .map((item: any, index: number) => {\n            const meta = item?.metadata?.type ? ` (${item.metadata.type})` : \"\";\n            const base = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${index + 1}. ${base}${meta}`;\n          })\n          .join(\"\\n\\n\");\n        appendSystem(`üóÇÔ∏è Complete memory listing:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not fetch stored memories.\");\n      }\n      return;\n    }\n\n    if (normalized === \"reset\") {\n      try {\n        const res = await fetch(`${API_BASE}/reset`, { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`‚ùå Reset failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem(data?.message ?? \"Memory reset complete.\");\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"‚ö†Ô∏è Could not reach the reset endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"help\") {\n      const helpText = COMMANDS.map((cmd) => `${cmd.usage} ‚Äî ${cmd.description}`).join(\"\\n\");\n      appendSystem(helpText);\n      return;\n    }\n\n    appendSystem(`Unknown command ‚Äú/${normalized}‚Äù. Try /help.`);\n  };\n\n  const applyCommandTemplate = (command: CommandDefinition) => {\n    const template = command.usage.endsWith(\" \") ? command.usage : `${command.usage} `;\n    setInput(template);\n    setCommandQuery(\"\");\n    setShowSuggestions(false);\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"chat-shell\">\n        <aside className=\"chat-sidebar\">\n          <div className=\"sidebar-header\">\n            <div>\n              <h1 className=\"sidebar-title\">Mem0 Classroom</h1>\n              <p className=\"sidebar-subtitle\">Fully local tutor (Ollama + Qdrant)</p>\n            </div>\n            <button className=\"ghost-button\" onClick={handleNewChat}>\n              New chat\n            </button>\n          </div>\n\n          <div className=\"sidebar-section\">\n            <h2>Session</h2>\n            {sessionId ? (\n              <code className=\"session-chip\">{sessionId}</code>\n            ) : (\n              <p>No active session yet.</p>\n            )}\n          </div>\n\n        </aside>\n\n        <main className=\"chat-main\">\n          <header className=\"chat-header\">\n            <div>\n              <h2 className=\"chat-header-title\">AI Student Mentor</h2>\n              <p className=\"chat-header-subtitle\">\n                Guide the learner and the assistant will respond with grounded context.\n              </p>\n            </div>\n            <span className={`status-badge ${isSending ? \"typing\" : \"idle\"}`}>\n              {isSending ? \"Generating‚Ä¶\" : \"Idle\"}\n            </span>\n          </header>\n\n          <section className=\"message-list\">\n            {messages.map((message) => (\n              <article\n                key={message.id}\n                className={`message-row ${message.role}`}\n                aria-label={`${ROLE_META[message.role].label} message`}\n              >\n                <div className={`message-avatar ${message.role}`}>\n                  {ROLE_META[message.role].initial}\n                </div>\n                <div className={`message-bubble ${message.role}`}>\n                  <div className=\"message-meta\">\n                    <span className=\"role\">{ROLE_META[message.role].label}</span>\n                    <span className=\"time\">{formatTime(message.createdAt)}</span>\n                  </div>\n                  <div className=\"message-text\">{message.text}</div>\n                </div>\n              </article>\n            ))}\n\n            {isSending && (\n              <article className=\"message-row student typing\" aria-live=\"polite\">\n                <div className=\"message-avatar student\">S</div>\n                <div className=\"message-bubble student\">\n                  <div className=\"message-meta\">\n                    <span className=\"role\">Student</span>\n                    <span className=\"time\">‚Ä¶</span>\n                  </div>\n                  <div className=\"typing-indicator\">\n                    <span />\n                    <span />\n                    <span />\n                  </div>\n                </div>\n              </article>\n            )}\n            <div ref={bottomRef} />\n          </section>\n\n          <form className=\"chat-input\" onSubmit={handleSubmit}>\n            <div className=\"chat-textarea-wrapper\">\n              <textarea\n                className=\"chat-textarea\"\n                placeholder=\"Send a prompt or /command. Press Enter to send, Shift+Enter for a new line.\"\n                value={input}\n                disabled={isSending}\n                onChange={(event) => handleInputChange(event.target.value)}\n                onKeyDown={async (event) => {\n                  if (event.key === \"Escape\" && showSuggestions) {\n                    event.preventDefault();\n                    closeCommandPalette();\n                    return;\n                  }\n                  if (event.key === \"Tab\" && showSuggestions && filteredCommands.length > 0) {\n                    event.preventDefault();\n                    applyCommandTemplate(filteredCommands[0]);\n                    return;\n                  }\n                  if (event.key === \"Enter\" && !event.shiftKey) {\n                    event.preventDefault();\n                    await processInput(input);\n                  }\n                }}\n                rows={Math.min(6, input.split(\"\\n\").length + 1)}\n              />\n\n              {showSuggestions && filteredCommands.length > 0 && (\n                <div className=\"command-suggestions\">\n                  {filteredCommands.map((cmd) => (\n                    <button\n                      key={cmd.name}\n                      type=\"button\"\n                      className=\"command-suggestion\"\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        applyCommandTemplate(cmd);\n                      }}\n                    >\n                      <strong>{cmd.usage}</strong>\n                      <span>{cmd.description}</span>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            <div className=\"chat-actions\">\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={() => setInput((prev) => `${prev}\\n`)}\n                disabled={isSending}\n              >\n                New line\n              </button>\n              <button type=\"submit\" className=\"primary-button\" disabled={isSending}>\n                {isSending ? \"Sending‚Ä¶\" : \"Send\"}\n              </button>\n            </div>\n          </form>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}