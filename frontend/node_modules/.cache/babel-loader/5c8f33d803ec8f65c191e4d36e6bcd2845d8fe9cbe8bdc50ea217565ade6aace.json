{"ast":null,"code":"var _jsxFileName = \"/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://127.0.0.1:8000\";\nconst COMMANDS = [{\n  name: \"topic\",\n  usage: \"/topic <new_topic>\",\n  description: \"Switch the current lesson topic\"\n}, {\n  name: \"session\",\n  usage: \"/session new\",\n  description: \"Start a brand-new session\"\n}, {\n  name: \"summary\",\n  usage: \"/summary\",\n  description: \"Summarize the active session\"\n}, {\n  name: \"search_topic\",\n  usage: \"/search_topic <keywords>\",\n  description: \"Search every stored memory for keywords\"\n}, {\n  name: \"all\",\n  usage: \"/all\",\n  description: \"List every stored memory entry\"\n}, {\n  name: \"reset\",\n  usage: \"/reset\",\n  description: \"Clear the entire local memory store\"\n}, {\n  name: \"help\",\n  usage: \"/help\",\n  description: \"Display the command reference\"\n}, {\n  name: \"search\",\n  usage: \"/search <keywords>\",\n  description: \"Legacy search on the active filters\"\n}];\nconst createMessage = (role, text) => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString()\n});\nconst formatTime = iso => new Date(iso).toLocaleTimeString([], {\n  hour: \"2-digit\",\n  minute: \"2-digit\"\n});\nconst ROLE_META = {\n  teacher: {\n    label: \"Teacher\",\n    initial: \"T\"\n  },\n  student: {\n    label: \"Student\",\n    initial: \"S\"\n  },\n  system: {\n    label: \"System\",\n    initial: \"ℹ\"\n  }\n};\nexport default function ChatApp() {\n  _s();\n  const [messages, setMessages] = useState(() => [createMessage(\"system\", \"Welcome! Let’s start when you’re ready to teach.\")]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState(null);\n  const [isSending, setIsSending] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [commandQuery, setCommandQuery] = useState(\"\");\n  const [teachMode, setTeachMode] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [editingSession, setEditingSession] = useState(null);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [refreshing, setRefreshing] = useState(false);\n  const bottomRef = useRef(null);\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, isSending]);\n  useEffect(() => {\n    fetchTeachMode();\n    fetchSessions();\n  }, []);\n  const pushSystemMessage = text => {\n    setMessages(prev => [...prev, createMessage(\"system\", text)]);\n  };\n  useEffect(() => {\n    const fetchTeachMode = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/teach_mode`);\n        if (!res.ok) {\n          return;\n        }\n        const data = await res.json();\n        setTeachMode(Boolean(data === null || data === void 0 ? void 0 : data.teach_mode));\n      } catch (error) {\n        console.error(\"Failed to load Teach Mode state\", error);\n      }\n    };\n    fetchTeachMode();\n  }, []);\n  const filteredCommands = useMemo(() => {\n    if (!showSuggestions) {\n      return [];\n    }\n    const token = commandQuery.trim();\n    if (!token) {\n      return COMMANDS;\n    }\n    return COMMANDS.filter(cmd => cmd.name.toLowerCase().includes(token) || cmd.usage.toLowerCase().includes(token));\n  }, [commandQuery, showSuggestions]);\n  const closeCommandPalette = () => {\n    setShowSuggestions(false);\n    setCommandQuery(\"\");\n  };\n  const updateTeachMode = async enabled => {\n    try {\n      const res = await fetch(`${API_BASE}/teach_mode?enabled=${enabled}`, {\n        method: \"POST\"\n      });\n      if (!res.ok) {\n        const text = await res.text();\n        pushSystemMessage(`❌ Teach Mode update failed: ${text || res.statusText}`);\n        return;\n      }\n      const data = await res.json();\n      const state = Boolean(data === null || data === void 0 ? void 0 : data.teach_mode);\n      setTeachMode(state);\n      pushSystemMessage(`Teach Mode ${state ? \"ON\" : \"OFF\"}.`);\n    } catch (error) {\n      console.error(\"Failed to update Teach Mode\", error);\n      pushSystemMessage(\"⚠️ Could not reach the Teach Mode endpoint.\");\n    }\n  };\n  const handleToggleTeachMode = async () => {\n    await updateTeachMode(!teachMode);\n  };\n  const handleFileInputChange = async event => {\n    const fileList = event.target.files;\n    if (!fileList || fileList.length === 0) {\n      return;\n    }\n    const files = Array.from(fileList);\n    if (files.length > 5) {\n      pushSystemMessage(\"Please upload up to 5 files at a time.\");\n      event.target.value = \"\";\n      return;\n    }\n    setIsUploading(true);\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append(\"files\", file));\n      const response = await fetch(`${API_BASE}/documents/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        pushSystemMessage(`❌ Upload failed: ${errorText || response.statusText}`);\n        return;\n      }\n      const data = await response.json();\n      const uploaded = Array.isArray(data.uploaded) ? data.uploaded : [];\n      const errors = Array.isArray(data.errors) ? data.errors : [];\n      if (uploaded.length > 0) {\n        const names = uploaded.map(item => (item === null || item === void 0 ? void 0 : item.filename) || \"document\").join(\", \");\n        pushSystemMessage(`📄 Uploaded ${uploaded.length} document(s): ${names}.`);\n      }\n      errors.forEach(err => {\n        if (err !== null && err !== void 0 && err.filename && err !== null && err !== void 0 && err.error) {\n          pushSystemMessage(`⚠️ ${err.filename}: ${err.error}`);\n        }\n      });\n    } catch (error) {\n      console.error(\"Upload failed\", error);\n      pushSystemMessage(\"⚠️ Could not upload documents. Please try again.\");\n    } finally {\n      setIsUploading(false);\n      event.target.value = \"\";\n    }\n  };\n  const fetchSessions = async () => {\n    setRefreshing(true);\n    try {\n      const res = await fetch(`${API_BASE}/sidebar_sessions`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setSessions(Array.isArray(data.sessions) ? data.sessions : []);\n    } catch (err) {\n      console.error(\"Sidebar fetch failed\", err);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n  const handleDeleteSession = async sessionIdToDelete => {\n    if (!window.confirm(\"Delete this chat permanently?\")) return;\n    try {\n      const res = await fetch(`${API_BASE}/delete_session?session_id=${sessionIdToDelete}`, {\n        method: \"DELETE\"\n      });\n      if (!res.ok) throw new Error(await res.text());\n      setMessages([createMessage(\"system\", \"Session deleted. Start a new chat or pick another conversation from the list.\")]);\n      if (sessionId === sessionIdToDelete) {\n        setSessionId(null);\n      }\n      await fetchSessions();\n    } catch (err) {\n      console.error(\"Delete failed\", err);\n      pushSystemMessage(\"⚠️ Failed to delete session.\");\n    }\n  };\n  const handleRenameSession = async sessionId => {\n    if (!newTitle.trim()) {\n      pushSystemMessage(\"Provide a new title before saving.\");\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE}/rename_session?session_id=${sessionId}&new_name=${encodeURIComponent(newTitle.trim())}`, {\n        method: \"POST\"\n      });\n      if (!res.ok) throw new Error(await res.text());\n      setEditingSession(null);\n      setNewTitle(\"\");\n      await fetchSessions();\n    } catch (err) {\n      console.error(\"Rename failed\", err);\n      pushSystemMessage(\"⚠️ Failed to rename session.\");\n    }\n  };\n  const handleSelectSession = async sessionId => {\n    try {\n      const res = await fetch(`${API_BASE}/session_messages?session_id=${sessionId}`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setSessionId(sessionId);\n      setMessages((data.messages || []).map(m => createMessage(m.role === \"assistant\" ? \"student\" : \"teacher\", m.content)));\n    } catch (err) {\n      console.error(\"Session load failed\", err);\n      pushSystemMessage(\"⚠️ Failed to load session.\");\n    }\n  };\n  const handleInputChange = value => {\n    setInput(value);\n    if (value.startsWith(\"/\")) {\n      const afterSlash = value.slice(1).toLowerCase();\n      const [firstToken = \"\"] = afterSlash.split(/\\s+/);\n      setShowSuggestions(true);\n      setCommandQuery(firstToken);\n    } else {\n      closeCommandPalette();\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([createMessage(\"system\", \"New chat started. Use /topic <subject> when you're ready to begin teaching.\")]);\n    setSessionId(null);\n    setInput(\"\");\n    closeCommandPalette();\n  };\n  const processInput = async rawInput => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n    setInput(\"\");\n    if (trimmed.startsWith(\"/\")) {\n      closeCommandPalette();\n      await handleCommand(trimmed);\n      return;\n    }\n    closeCommandPalette();\n    await sendPrompt(trimmed);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await processInput(input);\n  };\n  const sendPrompt = async prompt => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages(prev => [...prev, teacherMessage]);\n    setIsSending(true);\n    try {\n      var _data$session_id;\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n      const response = await fetch(url.toString(), {\n        method: \"POST\"\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages(prev => [...prev, createMessage(\"system\", `❌ Server error: ${errorText || response.statusText}`)]);\n        return;\n      }\n      const data = await response.json();\n      setSessionId((_data$session_id = data.session_id) !== null && _data$session_id !== void 0 ? _data$session_id : sessionId);\n      const rawResponse = typeof data.response === \"string\" ? data.response : \"\";\n      const trimmedResponse = rawResponse.trim();\n      const assistantReply = trimmedResponse.length > 0 ? trimmedResponse : teachMode ? \"\" : \"I did not receive a response from the model.\";\n      setMessages(prev => [...prev, createMessage(\"student\", assistantReply)]);\n    } catch (error) {\n      console.error(error);\n      setMessages(prev => [...prev, createMessage(\"system\", \"⚠️ Connection error. Confirm the FastAPI server is running.\")]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n  const handleCommand = async rawCommand => {\n    const stripped = rawCommand.slice(1).trim();\n    const commandMessage = createMessage(\"teacher\", rawCommand);\n    if (!stripped) {\n      setMessages(prev => [...prev, commandMessage, createMessage(\"system\", \"Type /help to see the available commands.\")]);\n      return;\n    }\n    const [commandToken, ...args] = stripped.split(/\\s+/);\n    const normalized = commandToken.toLowerCase();\n    const appendSystem = (...systemTexts) => {\n      setMessages(prev => [...prev, commandMessage, ...systemTexts.map(text => createMessage(\"system\", text))]);\n    };\n    if (normalized === \"topic\") {\n      const topic = args.join(\" \").trim();\n      if (!topic) {\n        appendSystem(\"Usage: /topic <new_topic>\");\n        return;\n      }\n      try {\n        var _data$message;\n        const url = new URL(`${API_BASE}/topic`);\n        url.searchParams.set(\"new_topic\", topic);\n        const res = await fetch(url.toString(), {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Topic update failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem((_data$message = data.message) !== null && _data$message !== void 0 ? _data$message : `✅ Topic set to '${topic}'.`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the topic endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"session\") {\n      const sub = (args[0] || \"\").toLowerCase();\n      if (sub === \"new\") {\n        try {\n          var _data$session_id2;\n          const res = await fetch(`${API_BASE}/session`, {\n            method: \"POST\"\n          });\n          if (!res.ok) {\n            const text = await res.text();\n            appendSystem(`❌ Session start failed: ${text || res.statusText}`);\n            return;\n          }\n          const data = await res.json();\n          handleNewChat();\n          setSessionId((_data$session_id2 = data.session_id) !== null && _data$session_id2 !== void 0 ? _data$session_id2 : null);\n          setMessages(prev => {\n            var _data$message2;\n            return [...prev, commandMessage, createMessage(\"system\", (_data$message2 = data.message) !== null && _data$message2 !== void 0 ? _data$message2 : \"🆕 New session started.\")];\n          });\n        } catch (error) {\n          console.error(error);\n          appendSystem(\"⚠️ Could not start a new session.\");\n        }\n      } else {\n        appendSystem(\"Usage: /session new\");\n      }\n      return;\n    }\n    if (normalized === \"summary\") {\n      if (!sessionId) {\n        appendSystem(\"No active session. Use /session new to begin.\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/summary`);\n        url.searchParams.set(\"session_id\", sessionId);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Summary failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const summary = typeof data.summary === \"string\" ? data.summary : JSON.stringify(data.summary);\n        appendSystem(`📘 Session summary:\\n\\n${summary}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not retrieve the summary.\");\n      }\n      return;\n    }\n    if (normalized === \"search_topic\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search_topic <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search_topic`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Topic search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched “${query}”.`);\n          return;\n        }\n        const formatted = hits.map((item, index) => {\n          var _item$memory, _item$score$toFixed, _item$score, _item$score$toFixed2;\n          return `${index + 1}. ${(_item$memory = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory !== void 0 ? _item$memory : \"—\"}\\n   score: ${(_item$score$toFixed = item === null || item === void 0 ? void 0 : (_item$score = item.score) === null || _item$score === void 0 ? void 0 : (_item$score$toFixed2 = _item$score.toFixed) === null || _item$score$toFixed2 === void 0 ? void 0 : _item$score$toFixed2.call(_item$score, 3)) !== null && _item$score$toFixed !== void 0 ? _item$score$toFixed : \"?\"}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`🔍 Memories mentioning “${query}”:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the search endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search <keywords>\");\n        return;\n      }\n      try {\n        var _data$results;\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray((_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.results) ? data.results.results : Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched “${query}”.`);\n          return;\n        }\n        const formatted = hits.map((item, index) => {\n          var _ref, _item$memory2;\n          const memoryText = (_ref = (_item$memory2 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory2 !== void 0 ? _item$memory2 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref !== void 0 ? _ref : JSON.stringify(item);\n          return `${index + 1}. ${memoryText}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`🔍 Search results for “${query}”:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the search API.\");\n      }\n      return;\n    }\n    if (normalized === \"all\") {\n      try {\n        const res = await fetch(`${API_BASE}/all`);\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Fetch failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          appendSystem(\"No stored memories yet.\");\n          return;\n        }\n        const formatted = memories.map((item, index) => {\n          var _item$metadata, _ref2, _item$memory3;\n          const meta = item !== null && item !== void 0 && (_item$metadata = item.metadata) !== null && _item$metadata !== void 0 && _item$metadata.type ? ` (${item.metadata.type})` : \"\";\n          const base = (_ref2 = (_item$memory3 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory3 !== void 0 ? _item$memory3 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref2 !== void 0 ? _ref2 : JSON.stringify(item);\n          return `${index + 1}. ${base}${meta}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`🗂️ Complete memory listing:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not fetch stored memories.\");\n      }\n      return;\n    }\n    if (normalized === \"reset\") {\n      try {\n        var _data$message3;\n        const res = await fetch(`${API_BASE}/reset`, {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Reset failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem((_data$message3 = data === null || data === void 0 ? void 0 : data.message) !== null && _data$message3 !== void 0 ? _data$message3 : \"Memory reset complete.\");\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the reset endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"help\") {\n      const helpText = COMMANDS.map(cmd => `${cmd.usage} — ${cmd.description}`).join(\"\\n\");\n      appendSystem(helpText);\n      return;\n    }\n    appendSystem(`Unknown command “/${normalized}”. Try /help.`);\n  };\n  const applyCommandTemplate = command => {\n    const template = command.usage.endsWith(\" \") ? command.usage : `${command.usage} `;\n    setInput(template);\n    setCommandQuery(\"\");\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"chat-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ghost-button large\",\n            onClick: handleNewChat,\n            children: \"New Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), sessionId ? /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"session-chip\",\n            children: sessionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No active session yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Teach Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `ghost-button teach-toggle ${teachMode ? \"active\" : \"\"}`,\n            onClick: handleToggleTeachMode,\n            disabled: isSending,\n            children: teachMode ? \"Teach Mode: ON\" : \"Teach Mode: OFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sidebar-hint\",\n            children: \"When on, the student stays quiet so you can teach uninterrupted.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"chat-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chat-header-title\",\n              children: \"AI Student Mentor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chat-header-subtitle\",\n              children: \"Guide the learner and the assistant will respond with grounded context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-badge ${isSending ? \"typing\" : \"idle\"}`,\n            children: isSending ? \"Generating…\" : \"Idle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"message-list\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"article\", {\n            className: `message-row ${message.role}`,\n            \"aria-label\": `${ROLE_META[message.role].label} message`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-avatar ${message.role}`,\n              children: ROLE_META[message.role].initial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-bubble ${message.role}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: ROLE_META[message.role].label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: formatTime(message.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 17\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this)), isSending && /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"message-row student typing\",\n            \"aria-live\": \"polite\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar student\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble student\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: \"Student\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: \"\\u2026\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: bottomRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            style: {\n              display: \"none\"\n            },\n            multiple: true,\n            accept: \".pdf,.ppt,.pptx,.doc,.docx,.xls,.xlsx,.md,.txt,.png,.jpg,.jpeg,.heic,.bmp,.csv,.tsv\",\n            onChange: handleFileInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-textarea-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chat-textarea\",\n              placeholder: \"Send a prompt or /command. Press Enter to send, Shift+Enter for a new line.\",\n              value: input,\n              disabled: isSending,\n              onChange: event => handleInputChange(event.target.value),\n              onKeyDown: async event => {\n                if (event.key === \"Escape\" && showSuggestions) {\n                  event.preventDefault();\n                  closeCommandPalette();\n                  return;\n                }\n                if (event.key === \"Tab\" && showSuggestions && filteredCommands.length > 0) {\n                  event.preventDefault();\n                  applyCommandTemplate(filteredCommands[0]);\n                  return;\n                }\n                if (event.key === \"Enter\" && !event.shiftKey) {\n                  event.preventDefault();\n                  await processInput(input);\n                }\n              },\n              rows: Math.min(6, input.split(\"\\n\").length + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this), showSuggestions && filteredCommands.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"command-suggestions\",\n              children: filteredCommands.map(cmd => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"command-suggestion\",\n                onMouseDown: event => {\n                  event.preventDefault();\n                  applyCommandTemplate(cmd);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: cmd.usage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: cmd.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 23\n                }, this)]\n              }, cmd.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"secondary-button\",\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              disabled: isUploading || isSending,\n              children: isUploading ? \"Uploading…\" : \"Upload Docs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"secondary-button\",\n              onClick: () => setInput(prev => `${prev}\\n`),\n              disabled: isSending,\n              children: \"New line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"primary-button\",\n              disabled: isSending,\n              children: isSending ? \"Sending…\" : \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 628,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"kLUPAbcsFX/WfDcEdFsQX59zJcU=\");\n_c = ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","API_BASE","COMMANDS","name","usage","description","createMessage","role","text","id","Date","now","Math","random","toString","slice","createdAt","toISOString","formatTime","iso","toLocaleTimeString","hour","minute","ROLE_META","teacher","label","initial","student","system","ChatApp","_s","messages","setMessages","input","setInput","sessionId","setSessionId","isSending","setIsSending","showSuggestions","setShowSuggestions","commandQuery","setCommandQuery","teachMode","setTeachMode","isUploading","setIsUploading","sessions","setSessions","editingSession","setEditingSession","newTitle","setNewTitle","refreshing","setRefreshing","bottomRef","fileInputRef","_bottomRef$current","current","scrollIntoView","behavior","fetchTeachMode","fetchSessions","pushSystemMessage","prev","res","fetch","ok","data","json","Boolean","teach_mode","error","console","filteredCommands","token","trim","filter","cmd","toLowerCase","includes","closeCommandPalette","updateTeachMode","enabled","method","statusText","state","handleToggleTeachMode","handleFileInputChange","event","fileList","target","files","length","Array","from","value","formData","FormData","forEach","file","append","response","body","errorText","uploaded","isArray","errors","names","map","item","filename","join","err","Error","handleDeleteSession","sessionIdToDelete","window","confirm","handleRenameSession","encodeURIComponent","handleSelectSession","m","content","handleInputChange","startsWith","afterSlash","firstToken","split","handleNewChat","processInput","rawInput","trimmed","handleCommand","sendPrompt","handleSubmit","preventDefault","prompt","teacherMessage","_data$session_id","url","URL","searchParams","set","session_id","rawResponse","trimmedResponse","assistantReply","rawCommand","stripped","commandMessage","commandToken","args","normalized","appendSystem","systemTexts","topic","_data$message","message","sub","_data$session_id2","_data$message2","summary","JSON","stringify","query","hits","results","formatted","index","_item$memory","_item$score$toFixed","_item$score","_item$score$toFixed2","memory","score","toFixed","call","_data$results","_ref","_item$memory2","memoryText","memories","_item$metadata","_ref2","_item$memory3","meta","metadata","type","base","_data$message3","helpText","applyCommandTemplate","command","template","endsWith","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","ref","onSubmit","style","display","multiple","accept","onChange","placeholder","onKeyDown","key","shiftKey","rows","min","onMouseDown","_fileInputRef$current","click","_c","$RefreshReg$"],"sources":["/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx"],"sourcesContent":["import React, { ChangeEvent, FormEvent, useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\n\ntype MessageRole = \"teacher\" | \"student\" | \"system\";\n\ntype Message = {\n  id: string;\n  role: MessageRole;\n  text: string;\n  createdAt: string;\n};\n\ntype CommandDefinition = {\n  name: string;\n  usage: string;\n  description: string;\n};\n\ntype SessionInfo = {\n  session_id: string;\n  last_message_time: string;\n  preview: string;\n  title?: string;\n};\n\nconst API_BASE = \"http://127.0.0.1:8000\";\n\nconst COMMANDS: CommandDefinition[] = [\n  {\n    name: \"topic\",\n    usage: \"/topic <new_topic>\",\n    description: \"Switch the current lesson topic\",\n  },\n  {\n    name: \"session\",\n    usage: \"/session new\",\n    description: \"Start a brand-new session\",\n  },\n  {\n    name: \"summary\",\n    usage: \"/summary\",\n    description: \"Summarize the active session\",\n  },\n  {\n    name: \"search_topic\",\n    usage: \"/search_topic <keywords>\",\n    description: \"Search every stored memory for keywords\",\n  },\n  {\n    name: \"all\",\n    usage: \"/all\",\n    description: \"List every stored memory entry\",\n  },\n  {\n    name: \"reset\",\n    usage: \"/reset\",\n    description: \"Clear the entire local memory store\",\n  },\n  {\n    name: \"help\",\n    usage: \"/help\",\n    description: \"Display the command reference\",\n  },\n  {\n    name: \"search\",\n    usage: \"/search <keywords>\",\n    description: \"Legacy search on the active filters\",\n  },\n];\n\nconst createMessage = (role: MessageRole, text: string): Message => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString(),\n});\n\nconst formatTime = (iso: string) =>\n  new Date(iso).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nconst ROLE_META: Record<MessageRole, { label: string; initial: string }> = {\n  teacher: { label: \"Teacher\", initial: \"T\" },\n  student: { label: \"Student\", initial: \"S\" },\n  system: { label: \"System\", initial: \"ℹ\" },\n};\n\nexport default function ChatApp() {\n  const [messages, setMessages] = useState<Message[]>(() => [\n    createMessage(\"system\", \"Welcome! Let’s start when you’re ready to teach.\"),\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState<string | null>(null);\n  const [isSending, setIsSending] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [commandQuery, setCommandQuery] = useState(\"\");\n  const [teachMode, setTeachMode] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [sessions, setSessions] = useState<SessionInfo[]>([]);\n  const [editingSession, setEditingSession] = useState<string | null>(null);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [refreshing, setRefreshing] = useState(false);\n\n  const bottomRef = useRef<HTMLDivElement | null>(null);\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, isSending]);\n\n  useEffect(() => {\n    fetchTeachMode();\n    fetchSessions();\n  }, []);\n\n  const pushSystemMessage = (text: string) => {\n    setMessages((prev) => [...prev, createMessage(\"system\", text)]);\n  };\n\n  useEffect(() => {\n    const fetchTeachMode = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/teach_mode`);\n        if (!res.ok) {\n          return;\n        }\n        const data = await res.json();\n        setTeachMode(Boolean(data?.teach_mode));\n      } catch (error) {\n        console.error(\"Failed to load Teach Mode state\", error);\n      }\n    };\n\n    fetchTeachMode();\n  }, []);\n\n  const filteredCommands = useMemo(() => {\n    if (!showSuggestions) {\n      return [];\n    }\n    const token = commandQuery.trim();\n    if (!token) {\n      return COMMANDS;\n    }\n    return COMMANDS.filter((cmd) =>\n      cmd.name.toLowerCase().includes(token) || cmd.usage.toLowerCase().includes(token)\n    );\n  }, [commandQuery, showSuggestions]);\n\n  const closeCommandPalette = () => {\n    setShowSuggestions(false);\n    setCommandQuery(\"\");\n  };\n\n  const updateTeachMode = async (enabled: boolean) => {\n    try {\n      const res = await fetch(`${API_BASE}/teach_mode?enabled=${enabled}`, { method: \"POST\" });\n      if (!res.ok) {\n        const text = await res.text();\n        pushSystemMessage(`❌ Teach Mode update failed: ${text || res.statusText}`);\n        return;\n      }\n      const data = await res.json();\n      const state = Boolean(data?.teach_mode);\n      setTeachMode(state);\n      pushSystemMessage(`Teach Mode ${state ? \"ON\" : \"OFF\"}.`);\n    } catch (error) {\n      console.error(\"Failed to update Teach Mode\", error);\n      pushSystemMessage(\"⚠️ Could not reach the Teach Mode endpoint.\");\n    }\n  };\n\n  const handleToggleTeachMode = async () => {\n    await updateTeachMode(!teachMode);\n  };\n\n  const handleFileInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const fileList = event.target.files;\n    if (!fileList || fileList.length === 0) {\n      return;\n    }\n\n    const files = Array.from(fileList);\n    if (files.length > 5) {\n      pushSystemMessage(\"Please upload up to 5 files at a time.\");\n      event.target.value = \"\";\n      return;\n    }\n\n    setIsUploading(true);\n    try {\n      const formData = new FormData();\n      files.forEach((file) => formData.append(\"files\", file));\n\n      const response = await fetch(`${API_BASE}/documents/upload`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        pushSystemMessage(`❌ Upload failed: ${errorText || response.statusText}`);\n        return;\n      }\n\n      const data = await response.json();\n      const uploaded = Array.isArray(data.uploaded) ? data.uploaded : [];\n      const errors = Array.isArray(data.errors) ? data.errors : [];\n\n      if (uploaded.length > 0) {\n        const names = uploaded.map((item: any) => item?.filename || \"document\").join(\", \");\n        pushSystemMessage(`📄 Uploaded ${uploaded.length} document(s): ${names}.`);\n      }\n\n      errors.forEach((err: any) => {\n        if (err?.filename && err?.error) {\n          pushSystemMessage(`⚠️ ${err.filename}: ${err.error}`);\n        }\n      });\n    } catch (error) {\n      console.error(\"Upload failed\", error);\n      pushSystemMessage(\"⚠️ Could not upload documents. Please try again.\");\n    } finally {\n      setIsUploading(false);\n      event.target.value = \"\";\n    }\n  };\n\n  const fetchSessions = async () => {\n    setRefreshing(true);\n    try {\n      const res = await fetch(`${API_BASE}/sidebar_sessions`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setSessions(Array.isArray(data.sessions) ? data.sessions : []);\n    } catch (err) {\n      console.error(\"Sidebar fetch failed\", err);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  const handleDeleteSession = async (sessionIdToDelete: string) => {\n    if (!window.confirm(\"Delete this chat permanently?\")) return;\n    try {\n      const res = await fetch(`${API_BASE}/delete_session?session_id=${sessionIdToDelete}`, { method: \"DELETE\" });\n      if (!res.ok) throw new Error(await res.text());\n      setMessages([\n        createMessage(\n          \"system\",\n          \"Session deleted. Start a new chat or pick another conversation from the list.\"\n        ),\n      ]);\n      if (sessionId === sessionIdToDelete) {\n        setSessionId(null);\n      }\n      await fetchSessions();\n    } catch (err) {\n      console.error(\"Delete failed\", err);\n      pushSystemMessage(\"⚠️ Failed to delete session.\");\n    }\n  };\n\n  const handleRenameSession = async (sessionId: string) => {\n    if (!newTitle.trim()) {\n      pushSystemMessage(\"Provide a new title before saving.\");\n      return;\n    }\n    try {\n      const res = await fetch(\n        `${API_BASE}/rename_session?session_id=${sessionId}&new_name=${encodeURIComponent(newTitle.trim())}`,\n        { method: \"POST\" }\n      );\n      if (!res.ok) throw new Error(await res.text());\n      setEditingSession(null);\n      setNewTitle(\"\");\n      await fetchSessions();\n    } catch (err) {\n      console.error(\"Rename failed\", err);\n      pushSystemMessage(\"⚠️ Failed to rename session.\");\n    }\n  };\n\n  const handleSelectSession = async (sessionId: string) => {\n    try {\n      const res = await fetch(`${API_BASE}/session_messages?session_id=${sessionId}`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setSessionId(sessionId);\n      setMessages(\n        (data.messages || []).map((m: any) =>\n          createMessage(m.role === \"assistant\" ? \"student\" : \"teacher\", m.content)\n        )\n      );\n    } catch (err) {\n      console.error(\"Session load failed\", err);\n      pushSystemMessage(\"⚠️ Failed to load session.\");\n    }\n  };\n\n  const handleInputChange = (value: string) => {\n    setInput(value);\n    if (value.startsWith(\"/\")) {\n      const afterSlash = value.slice(1).toLowerCase();\n      const [firstToken = \"\"] = afterSlash.split(/\\s+/);\n      setShowSuggestions(true);\n      setCommandQuery(firstToken);\n    } else {\n      closeCommandPalette();\n    }\n  };\n\n  const handleNewChat = () => {\n    setMessages([\n      createMessage(\n        \"system\",\n        \"New chat started. Use /topic <subject> when you're ready to begin teaching.\"\n      ),\n    ]);\n    setSessionId(null);\n    setInput(\"\");\n    closeCommandPalette();\n  };\n\n  const processInput = async (rawInput: string) => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n\n    setInput(\"\");\n\n    if (trimmed.startsWith(\"/\")) {\n      closeCommandPalette();\n      await handleCommand(trimmed);\n      return;\n    }\n\n    closeCommandPalette();\n    await sendPrompt(trimmed);\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    await processInput(input);\n  };\n\n  const sendPrompt = async (prompt: string) => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages((prev) => [...prev, teacherMessage]);\n    setIsSending(true);\n\n    try {\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n\n      const response = await fetch(url.toString(), { method: \"POST\" });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", `❌ Server error: ${errorText || response.statusText}`),\n        ]);\n        return;\n      }\n\n      const data = await response.json();\n      setSessionId(data.session_id ?? sessionId);\n\n      const rawResponse = typeof data.response === \"string\" ? data.response : \"\";\n      const trimmedResponse = rawResponse.trim();\n      const assistantReply =\n        trimmedResponse.length > 0\n          ? trimmedResponse\n          : teachMode\n          ? \"\"\n          : \"I did not receive a response from the model.\";\n\n      setMessages((prev) => [...prev, createMessage(\"student\", assistantReply)]);\n    } catch (error) {\n      console.error(error);\n      setMessages((prev) => [\n        ...prev,\n        createMessage(\"system\", \"⚠️ Connection error. Confirm the FastAPI server is running.\"),\n      ]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  const handleCommand = async (rawCommand: string) => {\n    const stripped = rawCommand.slice(1).trim();\n    const commandMessage = createMessage(\"teacher\", rawCommand);\n\n    if (!stripped) {\n      setMessages((prev) => [\n        ...prev,\n        commandMessage,\n        createMessage(\"system\", \"Type /help to see the available commands.\"),\n      ]);\n      return;\n    }\n\n    const [commandToken, ...args] = stripped.split(/\\s+/);\n    const normalized = commandToken.toLowerCase();\n\n    const appendSystem = (...systemTexts: string[]) => {\n      setMessages((prev) => [\n        ...prev,\n        commandMessage,\n        ...systemTexts.map((text) => createMessage(\"system\", text)),\n      ]);\n    };\n\n    if (normalized === \"topic\") {\n      const topic = args.join(\" \").trim();\n      if (!topic) {\n        appendSystem(\"Usage: /topic <new_topic>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/topic`);\n        url.searchParams.set(\"new_topic\", topic);\n        const res = await fetch(url.toString(), { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Topic update failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem(data.message ?? `✅ Topic set to '${topic}'.`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the topic endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"session\") {\n      const sub = (args[0] || \"\").toLowerCase();\n      if (sub === \"new\") {\n        try {\n          const res = await fetch(`${API_BASE}/session`, { method: \"POST\" });\n          if (!res.ok) {\n            const text = await res.text();\n            appendSystem(`❌ Session start failed: ${text || res.statusText}`);\n            return;\n          }\n          const data = await res.json();\n          handleNewChat();\n          setSessionId(data.session_id ?? null);\n          setMessages((prev) => [\n            ...prev,\n            commandMessage,\n            createMessage(\"system\", data.message ?? \"🆕 New session started.\"),\n          ]);\n        } catch (error) {\n          console.error(error);\n          appendSystem(\"⚠️ Could not start a new session.\");\n        }\n      } else {\n        appendSystem(\"Usage: /session new\");\n      }\n      return;\n    }\n\n    if (normalized === \"summary\") {\n      if (!sessionId) {\n        appendSystem(\"No active session. Use /session new to begin.\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/summary`);\n        url.searchParams.set(\"session_id\", sessionId);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Summary failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const summary = typeof data.summary === \"string\" ? data.summary : JSON.stringify(data.summary);\n        appendSystem(`📘 Session summary:\\n\\n${summary}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not retrieve the summary.\");\n      }\n      return;\n    }\n\n    if (normalized === \"search_topic\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search_topic <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search_topic`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Topic search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched “${query}”.`);\n          return;\n        }\n        const formatted = hits\n          .map(\n            (item: any, index: number) =>\n              `${index + 1}. ${item?.memory ?? \"—\"}\\n   score: ${item?.score?.toFixed?.(3) ?? \"?\"}`\n          )\n          .join(\"\\n\\n\");\n        appendSystem(`🔍 Memories mentioning “${query}”:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the search endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results?.results)\n          ? data.results.results\n          : Array.isArray(data.results)\n          ? data.results\n          : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched “${query}”.`);\n          return;\n        }\n        const formatted = hits\n          .map((item: any, index: number) => {\n            const memoryText = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${index + 1}. ${memoryText}`;\n          })\n          .join(\"\\n\\n\");\n        appendSystem(`🔍 Search results for “${query}”:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the search API.\");\n      }\n      return;\n    }\n\n    if (normalized === \"all\") {\n      try {\n        const res = await fetch(`${API_BASE}/all`);\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Fetch failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          appendSystem(\"No stored memories yet.\");\n          return;\n        }\n        const formatted = memories\n          .map((item: any, index: number) => {\n            const meta = item?.metadata?.type ? ` (${item.metadata.type})` : \"\";\n            const base = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${index + 1}. ${base}${meta}`;\n          })\n          .join(\"\\n\\n\");\n        appendSystem(`🗂️ Complete memory listing:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not fetch stored memories.\");\n      }\n      return;\n    }\n\n    if (normalized === \"reset\") {\n      try {\n        const res = await fetch(`${API_BASE}/reset`, { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Reset failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem(data?.message ?? \"Memory reset complete.\");\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the reset endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"help\") {\n      const helpText = COMMANDS.map((cmd) => `${cmd.usage} — ${cmd.description}`).join(\"\\n\");\n      appendSystem(helpText);\n      return;\n    }\n\n    appendSystem(`Unknown command “/${normalized}”. Try /help.`);\n  };\n\n  const applyCommandTemplate = (command: CommandDefinition) => {\n    const template = command.usage.endsWith(\" \") ? command.usage : `${command.usage} `;\n    setInput(template);\n    setCommandQuery(\"\");\n    setShowSuggestions(false);\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"chat-shell\">\n        <aside className=\"chat-sidebar\">\n          <div className=\"sidebar-header\">\n            <button className=\"ghost-button large\" onClick={handleNewChat}>\n              New Chat\n            </button>\n          </div>\n\n          <div className=\"sidebar-section\">\n            <h2>Session</h2>\n            {sessionId ? (\n              <code className=\"session-chip\">{sessionId}</code>\n            ) : (\n              <p>No active session yet.</p>\n            )}\n          </div>\n\n          <div className=\"sidebar-section\">\n            <h2>Teach Mode</h2>\n            <button\n              type=\"button\"\n              className={`ghost-button teach-toggle ${teachMode ? \"active\" : \"\"}`}\n              onClick={handleToggleTeachMode}\n              disabled={isSending}\n            >\n              {teachMode ? \"Teach Mode: ON\" : \"Teach Mode: OFF\"}\n            </button>\n            <p className=\"sidebar-hint\">\n              When on, the student stays quiet so you can teach uninterrupted.\n            </p>\n          </div>\n\n        </aside>\n\n        <main className=\"chat-main\">\n          <header className=\"chat-header\">\n            <div>\n              <h2 className=\"chat-header-title\">AI Student Mentor</h2>\n              <p className=\"chat-header-subtitle\">\n                Guide the learner and the assistant will respond with grounded context.\n              </p>\n            </div>\n            <span className={`status-badge ${isSending ? \"typing\" : \"idle\"}`}>\n              {isSending ? \"Generating…\" : \"Idle\"}\n            </span>\n          </header>\n\n          <section className=\"message-list\">\n            {messages.map((message) => (\n              <article\n                key={message.id}\n                className={`message-row ${message.role}`}\n                aria-label={`${ROLE_META[message.role].label} message`}\n              >\n                <div className={`message-avatar ${message.role}`}>\n                  {ROLE_META[message.role].initial}\n                </div>\n                <div className={`message-bubble ${message.role}`}>\n                  <div className=\"message-meta\">\n                    <span className=\"role\">{ROLE_META[message.role].label}</span>\n                    <span className=\"time\">{formatTime(message.createdAt)}</span>\n                  </div>\n                  <div className=\"message-text\">{message.text}</div>\n                </div>\n              </article>\n            ))}\n\n            {isSending && (\n              <article className=\"message-row student typing\" aria-live=\"polite\">\n                <div className=\"message-avatar student\">S</div>\n                <div className=\"message-bubble student\">\n                  <div className=\"message-meta\">\n                    <span className=\"role\">Student</span>\n                    <span className=\"time\">…</span>\n                  </div>\n                  <div className=\"typing-indicator\">\n                    <span />\n                    <span />\n                    <span />\n                  </div>\n                </div>\n              </article>\n            )}\n            <div ref={bottomRef} />\n          </section>\n\n          <form className=\"chat-input\" onSubmit={handleSubmit}>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              style={{ display: \"none\" }}\n              multiple\n              accept=\".pdf,.ppt,.pptx,.doc,.docx,.xls,.xlsx,.md,.txt,.png,.jpg,.jpeg,.heic,.bmp,.csv,.tsv\"\n              onChange={handleFileInputChange}\n            />\n            <div className=\"chat-textarea-wrapper\">\n              <textarea\n                className=\"chat-textarea\"\n                placeholder=\"Send a prompt or /command. Press Enter to send, Shift+Enter for a new line.\"\n                value={input}\n                disabled={isSending}\n                onChange={(event) => handleInputChange(event.target.value)}\n                onKeyDown={async (event) => {\n                  if (event.key === \"Escape\" && showSuggestions) {\n                    event.preventDefault();\n                    closeCommandPalette();\n                    return;\n                  }\n                  if (event.key === \"Tab\" && showSuggestions && filteredCommands.length > 0) {\n                    event.preventDefault();\n                    applyCommandTemplate(filteredCommands[0]);\n                    return;\n                  }\n                  if (event.key === \"Enter\" && !event.shiftKey) {\n                    event.preventDefault();\n                    await processInput(input);\n                  }\n                }}\n                rows={Math.min(6, input.split(\"\\n\").length + 1)}\n              />\n\n              {showSuggestions && filteredCommands.length > 0 && (\n                <div className=\"command-suggestions\">\n                  {filteredCommands.map((cmd) => (\n                    <button\n                      key={cmd.name}\n                      type=\"button\"\n                      className=\"command-suggestion\"\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        applyCommandTemplate(cmd);\n                      }}\n                    >\n                      <strong>{cmd.usage}</strong>\n                      <span>{cmd.description}</span>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            <div className=\"chat-actions\">\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={() => fileInputRef.current?.click()}\n                disabled={isUploading || isSending}\n              >\n                {isUploading ? \"Uploading…\" : \"Upload Docs\"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={() => setInput((prev) => `${prev}\\n`)}\n                disabled={isSending}\n              >\n                New line\n              </button>\n              <button type=\"submit\" className=\"primary-button\" disabled={isSending}>\n                {isSending ? \"Sending…\" : \"Send\"}\n              </button>\n            </div>\n          </form>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}