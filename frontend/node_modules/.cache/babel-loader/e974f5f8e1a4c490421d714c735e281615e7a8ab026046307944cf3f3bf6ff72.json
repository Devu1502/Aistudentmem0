{"ast":null,"code":"var _jsxFileName = \"/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://127.0.0.1:8000\";\nconst COMMANDS = [{\n  name: \"topic\",\n  usage: \"/topic <new_topic>\",\n  description: \"Switch the current lesson topic\"\n}, {\n  name: \"session\",\n  usage: \"/session new\",\n  description: \"Start a brand-new session\"\n}, {\n  name: \"summary\",\n  usage: \"/summary\",\n  description: \"Summarize the active session\"\n}, {\n  name: \"search_topic\",\n  usage: \"/search_topic <keywords>\",\n  description: \"Search every stored memory for keywords\"\n}, {\n  name: \"all\",\n  usage: \"/all\",\n  description: \"List every stored memory entry\"\n}, {\n  name: \"reset\",\n  usage: \"/reset\",\n  description: \"Clear the entire local memory store\"\n}, {\n  name: \"help\",\n  usage: \"/help\",\n  description: \"Display the command reference\"\n}, {\n  name: \"search\",\n  usage: \"/search <keywords>\",\n  description: \"Legacy search on the active filters\"\n}];\nconst createMessage = (role, text) => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString()\n});\nconst formatTime = iso => new Date(iso).toLocaleTimeString([], {\n  hour: \"2-digit\",\n  minute: \"2-digit\"\n});\nconst ROLE_META = {\n  teacher: {\n    label: \"Teacher\",\n    initial: \"T\"\n  },\n  student: {\n    label: \"Student\",\n    initial: \"S\"\n  },\n  system: {\n    label: \"System\",\n    initial: \"ℹ\"\n  }\n};\nexport default function ChatApp() {\n  _s();\n  const [messages, setMessages] = useState(() => [createMessage(\"system\", \"Welcome! Let’s start when you’re ready to teach.\")]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState(null);\n  const [isSending, setIsSending] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [commandQuery, setCommandQuery] = useState(\"\");\n  const [teachMode, setTeachMode] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [editingSession, setEditingSession] = useState(null);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [refreshing, setRefreshing] = useState(false);\n  const bottomRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const pushSystemMessage = text => {\n    setMessages(prev => [...prev, createMessage(\"system\", text)]);\n  };\n  const fetchTeachMode = async () => {\n    try {\n      const res = await fetch(`${API_BASE}/teach_mode`);\n      if (!res.ok) {\n        return;\n      }\n      const data = await res.json();\n      setTeachMode(Boolean(data === null || data === void 0 ? void 0 : data.teach_mode));\n    } catch (error) {\n      console.error(\"Failed to load Teach Mode state\", error);\n    }\n  };\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, isSending]);\n  useEffect(() => {\n    fetchTeachMode();\n    fetchSessions(true);\n  }, []);\n  const filteredCommands = useMemo(() => {\n    if (!showSuggestions) {\n      return [];\n    }\n    const token = commandQuery.trim();\n    if (!token) {\n      return COMMANDS;\n    }\n    return COMMANDS.filter(cmd => cmd.name.toLowerCase().includes(token) || cmd.usage.toLowerCase().includes(token));\n  }, [commandQuery, showSuggestions]);\n  const closeCommandPalette = () => {\n    setShowSuggestions(false);\n    setCommandQuery(\"\");\n  };\n  const updateTeachMode = async enabled => {\n    try {\n      const res = await fetch(`${API_BASE}/teach_mode?enabled=${enabled}`, {\n        method: \"POST\"\n      });\n      if (!res.ok) {\n        const text = await res.text();\n        pushSystemMessage(`❌ Teach Mode update failed: ${text || res.statusText}`);\n        return;\n      }\n      const data = await res.json();\n      const state = Boolean(data === null || data === void 0 ? void 0 : data.teach_mode);\n      setTeachMode(state);\n      pushSystemMessage(`Teach Mode ${state ? \"ON\" : \"OFF\"}.`);\n    } catch (error) {\n      console.error(\"Failed to update Teach Mode\", error);\n      pushSystemMessage(\"⚠️ Could not reach the Teach Mode endpoint.\");\n    }\n  };\n  const handleToggleTeachMode = async () => {\n    await updateTeachMode(!teachMode);\n  };\n  const handleFileInputChange = async event => {\n    const fileList = event.target.files;\n    if (!fileList || fileList.length === 0) {\n      return;\n    }\n    const files = Array.from(fileList);\n    if (files.length > 5) {\n      pushSystemMessage(\"Please upload up to 5 files at a time.\");\n      event.target.value = \"\";\n      return;\n    }\n    setIsUploading(true);\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append(\"files\", file));\n      const response = await fetch(`${API_BASE}/documents/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        pushSystemMessage(`❌ Upload failed: ${errorText || response.statusText}`);\n        return;\n      }\n      const data = await response.json();\n      const uploaded = Array.isArray(data.uploaded) ? data.uploaded : [];\n      const errors = Array.isArray(data.errors) ? data.errors : [];\n      if (uploaded.length > 0) {\n        const names = uploaded.map(item => (item === null || item === void 0 ? void 0 : item.filename) || \"document\").join(\", \");\n        pushSystemMessage(`📄 Uploaded ${uploaded.length} document(s): ${names}.`);\n      }\n      errors.forEach(err => {\n        if (err !== null && err !== void 0 && err.filename && err !== null && err !== void 0 && err.error) {\n          pushSystemMessage(`⚠️ ${err.filename}: ${err.error}`);\n        }\n      });\n    } catch (error) {\n      console.error(\"Upload failed\", error);\n      pushSystemMessage(\"⚠️ Could not upload documents. Please try again.\");\n    } finally {\n      setIsUploading(false);\n      event.target.value = \"\";\n    }\n  };\n  const fetchSessions = async (autoLoad = false) => {\n    setRefreshing(true);\n    try {\n      const res = await fetch(`${API_BASE}/sidebar_sessions`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      const list = Array.isArray(data.sessions) ? data.sessions : [];\n      setSessions(list);\n      if (autoLoad && list.length > 0) {\n        await handleSelectSession(list[0].session_id);\n      }\n    } catch (err) {\n      console.error(\"Sidebar fetch failed\", err);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n  const handleDeleteSession = async sessionIdToDelete => {\n    if (!window.confirm(\"Delete this chat permanently?\")) return;\n    try {\n      const res = await fetch(`${API_BASE}/delete_session?session_id=${sessionIdToDelete}`, {\n        method: \"DELETE\"\n      });\n      if (!res.ok) throw new Error(await res.text());\n      if (sessionId === sessionIdToDelete) {\n        setSessionId(null);\n        setMessages([createMessage(\"system\", \"Session deleted. Start a new chat or pick another conversation from the list.\")]);\n      }\n      await fetchSessions(sessionId === sessionIdToDelete);\n    } catch (err) {\n      console.error(\"Delete failed\", err);\n      pushSystemMessage(\"⚠️ Failed to delete session.\");\n    }\n  };\n  const handleRenameSession = async sessionId => {\n    if (!newTitle.trim()) {\n      pushSystemMessage(\"Provide a new title before saving.\");\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE}/rename_session?session_id=${sessionId}&new_name=${encodeURIComponent(newTitle.trim())}`, {\n        method: \"POST\"\n      });\n      if (!res.ok) throw new Error(await res.text());\n      setEditingSession(null);\n      setNewTitle(\"\");\n      await fetchSessions();\n    } catch (err) {\n      console.error(\"Rename failed\", err);\n      pushSystemMessage(\"⚠️ Failed to rename session.\");\n    }\n  };\n  const handleSelectSession = async sessionId => {\n    try {\n      const res = await fetch(`${API_BASE}/session_messages?session_id=${sessionId}`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setSessionId(sessionId);\n      setMessages((data.messages || []).map(m => ({\n        id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n        role: m.role === \"assistant\" ? \"student\" : \"teacher\",\n        text: m.content,\n        createdAt: m.timestamp || new Date().toISOString()\n      })));\n    } catch (err) {\n      console.error(\"Session load failed\", err);\n      pushSystemMessage(\"⚠️ Failed to load session.\");\n    }\n  };\n  const handleInputChange = value => {\n    setInput(value);\n    if (value.startsWith(\"/\")) {\n      const afterSlash = value.slice(1).toLowerCase();\n      const [firstToken = \"\"] = afterSlash.split(/\\s+/);\n      setShowSuggestions(true);\n      setCommandQuery(firstToken);\n    } else {\n      closeCommandPalette();\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([createMessage(\"system\", \"New chat started. Use /topic <subject> when you're ready to begin teaching.\")]);\n    setSessionId(null);\n    setInput(\"\");\n    closeCommandPalette();\n  };\n  const processInput = async rawInput => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n    setInput(\"\");\n    if (trimmed.startsWith(\"/\")) {\n      closeCommandPalette();\n      await handleCommand(trimmed);\n      return;\n    }\n    closeCommandPalette();\n    await sendPrompt(trimmed);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await processInput(input);\n  };\n  const sendPrompt = async prompt => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages(prev => [...prev, teacherMessage]);\n    setIsSending(true);\n    try {\n      var _data$session_id;\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n      const response = await fetch(url.toString(), {\n        method: \"POST\"\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages(prev => [...prev, createMessage(\"system\", `❌ Server error: ${errorText || response.statusText}`)]);\n        return;\n      }\n      const data = await response.json();\n      setSessionId((_data$session_id = data.session_id) !== null && _data$session_id !== void 0 ? _data$session_id : sessionId);\n      const rawResponse = typeof data.response === \"string\" ? data.response : \"\";\n      const trimmedResponse = rawResponse.trim();\n      const assistantReply = trimmedResponse.length > 0 ? trimmedResponse : teachMode ? \"\" : \"I did not receive a response from the model.\";\n      setMessages(prev => [...prev, createMessage(\"student\", assistantReply)]);\n      fetchSessions();\n    } catch (error) {\n      console.error(error);\n      setMessages(prev => [...prev, createMessage(\"system\", \"⚠️ Connection error. Confirm the FastAPI server is running.\")]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n  const handleCommand = async rawCommand => {\n    const stripped = rawCommand.slice(1).trim();\n    console.log(\"Command executed:\", rawCommand);\n    const commandMessage = null;\n    if (!stripped) {\n      setMessages(prev => [...prev, createMessage(\"system\", \"Type /help to see the available commands.\")]);\n      return;\n    }\n    const [commandToken, ...args] = stripped.split(/\\s+/);\n    const normalized = commandToken.toLowerCase();\n    const appendSystem = (...systemTexts) => {\n      setMessages(prev => [...prev, ...systemTexts.map(text => createMessage(\"system\", text))]);\n    };\n    if (normalized === \"topic\") {\n      const topic = args.join(\" \").trim();\n      if (!topic) {\n        appendSystem(\"Usage: /topic <new_topic>\");\n        return;\n      }\n      try {\n        var _data$message;\n        const url = new URL(`${API_BASE}/topic`);\n        url.searchParams.set(\"new_topic\", topic);\n        const res = await fetch(url.toString(), {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Topic update failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem((_data$message = data.message) !== null && _data$message !== void 0 ? _data$message : `✅ Topic set to '${topic}'.`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the topic endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"session\") {\n      const sub = (args[0] || \"\").toLowerCase();\n      if (sub === \"new\") {\n        try {\n          var _data$session_id2;\n          const res = await fetch(`${API_BASE}/session`, {\n            method: \"POST\"\n          });\n          if (!res.ok) {\n            const text = await res.text();\n            appendSystem(`❌ Session start failed: ${text || res.statusText}`);\n            return;\n          }\n          const data = await res.json();\n          handleNewChat();\n          setSessionId((_data$session_id2 = data.session_id) !== null && _data$session_id2 !== void 0 ? _data$session_id2 : null);\n          setMessages(prev => {\n            var _data$message2;\n            return [...prev, createMessage(\"system\", (_data$message2 = data.message) !== null && _data$message2 !== void 0 ? _data$message2 : \"🆕 New session started.\")];\n          });\n        } catch (error) {\n          console.error(error);\n          appendSystem(\"⚠️ Could not start a new session.\");\n        }\n      } else {\n        appendSystem(\"Usage: /session new\");\n      }\n      return;\n    }\n    if (normalized === \"summary\") {\n      if (!sessionId) {\n        appendSystem(\"No active session. Use /session new to begin.\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/summary`);\n        url.searchParams.set(\"session_id\", sessionId);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Summary failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const summary = typeof data.summary === \"string\" ? data.summary : JSON.stringify(data.summary);\n        appendSystem(`📘 Session summary:\\n\\n${summary}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not retrieve the summary.\");\n      }\n      return;\n    }\n    if (normalized === \"search_topic\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search_topic <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search_topic`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Topic search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched “${query}”.`);\n          return;\n        }\n        const formatted = hits.map((item, index) => {\n          var _item$memory, _item$score$toFixed, _item$score, _item$score$toFixed2;\n          return `${index + 1}. ${(_item$memory = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory !== void 0 ? _item$memory : \"—\"}\\n   score: ${(_item$score$toFixed = item === null || item === void 0 ? void 0 : (_item$score = item.score) === null || _item$score === void 0 ? void 0 : (_item$score$toFixed2 = _item$score.toFixed) === null || _item$score$toFixed2 === void 0 ? void 0 : _item$score$toFixed2.call(_item$score, 3)) !== null && _item$score$toFixed !== void 0 ? _item$score$toFixed : \"?\"}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`🔍 Memories mentioning “${query}”:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the search endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search <keywords>\");\n        return;\n      }\n      try {\n        var _data$results;\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray((_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.results) ? data.results.results : Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched “${query}”.`);\n          return;\n        }\n        const formatted = hits.map((item, index) => {\n          var _ref, _item$memory2;\n          const memoryText = (_ref = (_item$memory2 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory2 !== void 0 ? _item$memory2 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref !== void 0 ? _ref : JSON.stringify(item);\n          return `${index + 1}. ${memoryText}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`🔍 Search results for “${query}”:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the search API.\");\n      }\n      return;\n    }\n    if (normalized === \"all\") {\n      try {\n        const res = await fetch(`${API_BASE}/all`);\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Fetch failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          appendSystem(\"No stored memories yet.\");\n          return;\n        }\n        const formatted = memories.map((item, index) => {\n          var _item$metadata, _ref2, _item$memory3;\n          const meta = item !== null && item !== void 0 && (_item$metadata = item.metadata) !== null && _item$metadata !== void 0 && _item$metadata.type ? ` (${item.metadata.type})` : \"\";\n          const base = (_ref2 = (_item$memory3 = item === null || item === void 0 ? void 0 : item.memory) !== null && _item$memory3 !== void 0 ? _item$memory3 : item === null || item === void 0 ? void 0 : item.value) !== null && _ref2 !== void 0 ? _ref2 : JSON.stringify(item);\n          return `${index + 1}. ${base}${meta}`;\n        }).join(\"\\n\\n\");\n        appendSystem(`🗂️ Complete memory listing:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not fetch stored memories.\");\n      }\n      return;\n    }\n    if (normalized === \"reset\") {\n      try {\n        var _data$message3;\n        const res = await fetch(`${API_BASE}/reset`, {\n          method: \"POST\"\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Reset failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem((_data$message3 = data === null || data === void 0 ? void 0 : data.message) !== null && _data$message3 !== void 0 ? _data$message3 : \"Memory reset complete.\");\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the reset endpoint.\");\n      }\n      return;\n    }\n    if (normalized === \"help\") {\n      const helpText = COMMANDS.map(cmd => `${cmd.usage} — ${cmd.description}`).join(\"\\n\");\n      appendSystem(helpText);\n      return;\n    }\n    appendSystem(`Unknown command “/${normalized}”. Try /help.`);\n  };\n  const applyCommandTemplate = command => {\n    const template = command.usage.endsWith(\" \") ? command.usage : `${command.usage} `;\n    setInput(template);\n    setCommandQuery(\"\");\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"chat-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ghost-button large\",\n            onClick: handleNewChat,\n            children: \"+ New Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ghost-button\",\n            onClick: () => fetchSessions(),\n            disabled: refreshing,\n            children: refreshing ? \"Refreshing…\" : \"↻ Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"session-list\",\n            children: [sessions.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"empty\",\n              children: \"No chats yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 41\n            }, this), sessions.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `session-item ${sessionId === s.session_id ? \"active\" : \"\"}`,\n              children: editingSession === s.session_id ? /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => {\n                  e.preventDefault();\n                  handleRenameSession(s.session_id);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newTitle,\n                  onChange: e => setNewTitle(e.target.value),\n                  placeholder: \"New title\",\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"mini-btn\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"mini-btn\",\n                  onClick: () => {\n                    setEditingSession(null);\n                    setNewTitle(\"\");\n                  },\n                  children: \"\\u2716\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                role: \"button\",\n                tabIndex: 0,\n                onClick: () => handleSelectSession(s.session_id),\n                onKeyDown: e => {\n                  if (e.key === \"Enter\" || e.key === \" \") {\n                    e.preventDefault();\n                    handleSelectSession(s.session_id);\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: s.title || s.preview.slice(0, 30) || \"Untitled Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"preview\",\n                  children: s.preview || \"No messages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: s.last_message_time ? new Date(s.last_message_time).toLocaleString() : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"session-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation();\n                      setEditingSession(s.session_id);\n                      setNewTitle(s.title || s.preview || \"\");\n                    },\n                    children: \"\\u270F\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleDeleteSession(s.session_id);\n                    },\n                    children: \"\\uD83D\\uDDD1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 21\n              }, this)\n            }, s.session_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Teach Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `ghost-button teach-toggle ${teachMode ? \"active\" : \"\"}`,\n            onClick: handleToggleTeachMode,\n            disabled: isUploading || isSending,\n            children: teachMode ? \"Teach Mode: ON\" : \"Teach Mode: OFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sidebar-hint\",\n            children: \"When on, the student stays quiet so you can teach uninterrupted.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"chat-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chat-header-title\",\n              children: \"AI Student Mentor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chat-header-subtitle\",\n              children: \"Guide the learner and the assistant will respond with grounded context.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-badge ${isSending ? \"typing\" : \"idle\"}`,\n            children: isSending ? \"Generating…\" : \"Idle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"message-list\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"article\", {\n            className: `message-row ${message.role}`,\n            \"aria-label\": `${ROLE_META[message.role].label} message`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-avatar ${message.role}`,\n              children: ROLE_META[message.role].initial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-bubble ${message.role}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: ROLE_META[message.role].label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: formatTime(message.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 17\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 15\n          }, this)), isSending && /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"message-row student typing\",\n            \"aria-live\": \"polite\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar student\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble student\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"role\",\n                  children: \"Student\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: \"\\u2026\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: bottomRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            style: {\n              display: \"none\"\n            },\n            multiple: true,\n            accept: \".pdf,.ppt,.pptx,.doc,.docx,.xls,.xlsx,.md,.txt,.png,.jpg,.jpeg,.heic,.bmp,.csv,.tsv\",\n            onChange: handleFileInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-textarea-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chat-textarea\",\n              placeholder: \"Enter your message.\",\n              value: input,\n              disabled: isSending,\n              onChange: event => handleInputChange(event.target.value),\n              onKeyDown: async event => {\n                if (event.key === \"Escape\" && showSuggestions) {\n                  event.preventDefault();\n                  closeCommandPalette();\n                  return;\n                }\n                if (event.key === \"Tab\" && showSuggestions && filteredCommands.length > 0) {\n                  event.preventDefault();\n                  applyCommandTemplate(filteredCommands[0]);\n                  return;\n                }\n                if (event.key === \"Enter\" && !event.shiftKey) {\n                  event.preventDefault();\n                  await processInput(input);\n                }\n              },\n              rows: Math.min(6, input.split(\"\\n\").length + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 15\n            }, this), showSuggestions && filteredCommands.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"command-suggestions\",\n              children: filteredCommands.map(cmd => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"command-suggestion\",\n                onMouseDown: event => {\n                  event.preventDefault();\n                  applyCommandTemplate(cmd);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: cmd.usage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 839,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: cmd.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 23\n                }, this)]\n              }, cmd.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"secondary-button\",\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              disabled: isUploading || isSending,\n              children: isUploading ? \"Uploading…\" : \"Upload Docs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"secondary-button\",\n              onClick: () => setInput(prev => `${prev}\\n`),\n              disabled: isSending,\n              children: \"New line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"primary-button\",\n              disabled: isSending,\n              children: isSending ? \"Sending…\" : \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 630,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"XEW/7nNDjyn3hSd9Jpy6eAc6U54=\");\n_c = ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","API_BASE","COMMANDS","name","usage","description","createMessage","role","text","id","Date","now","Math","random","toString","slice","createdAt","toISOString","formatTime","iso","toLocaleTimeString","hour","minute","ROLE_META","teacher","label","initial","student","system","ChatApp","_s","messages","setMessages","input","setInput","sessionId","setSessionId","isSending","setIsSending","showSuggestions","setShowSuggestions","commandQuery","setCommandQuery","teachMode","setTeachMode","isUploading","setIsUploading","sessions","setSessions","editingSession","setEditingSession","newTitle","setNewTitle","refreshing","setRefreshing","bottomRef","fileInputRef","pushSystemMessage","prev","fetchTeachMode","res","fetch","ok","data","json","Boolean","teach_mode","error","console","_bottomRef$current","current","scrollIntoView","behavior","fetchSessions","filteredCommands","token","trim","filter","cmd","toLowerCase","includes","closeCommandPalette","updateTeachMode","enabled","method","statusText","state","handleToggleTeachMode","handleFileInputChange","event","fileList","target","files","length","Array","from","value","formData","FormData","forEach","file","append","response","body","errorText","uploaded","isArray","errors","names","map","item","filename","join","err","autoLoad","Error","list","handleSelectSession","session_id","handleDeleteSession","sessionIdToDelete","window","confirm","handleRenameSession","encodeURIComponent","m","content","timestamp","handleInputChange","startsWith","afterSlash","firstToken","split","handleNewChat","processInput","rawInput","trimmed","handleCommand","sendPrompt","handleSubmit","preventDefault","prompt","teacherMessage","_data$session_id","url","URL","searchParams","set","rawResponse","trimmedResponse","assistantReply","rawCommand","stripped","log","commandMessage","commandToken","args","normalized","appendSystem","systemTexts","topic","_data$message","message","sub","_data$session_id2","_data$message2","summary","JSON","stringify","query","hits","results","formatted","index","_item$memory","_item$score$toFixed","_item$score","_item$score$toFixed2","memory","score","toFixed","call","_data$results","_ref","_item$memory2","memoryText","memories","_item$metadata","_ref2","_item$memory3","meta","metadata","type","base","_data$message3","helpText","applyCommandTemplate","command","template","endsWith","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","s","onSubmit","e","onChange","placeholder","autoFocus","tabIndex","onKeyDown","key","title","preview","last_message_time","toLocaleString","stopPropagation","ref","style","display","multiple","accept","shiftKey","rows","min","onMouseDown","_fileInputRef$current","click","_c","$RefreshReg$"],"sources":["/Users/sreekanthgopi/Desktop/Apps/AIStudentMem0/frontend/src/App.tsx"],"sourcesContent":["import React, { ChangeEvent, FormEvent, useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\n\ntype MessageRole = \"teacher\" | \"student\" | \"system\";\n\ntype Message = {\n  id: string;\n  role: MessageRole;\n  text: string;\n  createdAt: string;\n};\n\ntype CommandDefinition = {\n  name: string;\n  usage: string;\n  description: string;\n};\n\ntype SessionInfo = {\n  session_id: string;\n  last_message_time: string;\n  preview: string;\n  title?: string;\n};\n\nconst API_BASE = \"http://127.0.0.1:8000\";\n\nconst COMMANDS: CommandDefinition[] = [\n  {\n    name: \"topic\",\n    usage: \"/topic <new_topic>\",\n    description: \"Switch the current lesson topic\",\n  },\n  {\n    name: \"session\",\n    usage: \"/session new\",\n    description: \"Start a brand-new session\",\n  },\n  {\n    name: \"summary\",\n    usage: \"/summary\",\n    description: \"Summarize the active session\",\n  },\n  {\n    name: \"search_topic\",\n    usage: \"/search_topic <keywords>\",\n    description: \"Search every stored memory for keywords\",\n  },\n  {\n    name: \"all\",\n    usage: \"/all\",\n    description: \"List every stored memory entry\",\n  },\n  {\n    name: \"reset\",\n    usage: \"/reset\",\n    description: \"Clear the entire local memory store\",\n  },\n  {\n    name: \"help\",\n    usage: \"/help\",\n    description: \"Display the command reference\",\n  },\n  {\n    name: \"search\",\n    usage: \"/search <keywords>\",\n    description: \"Legacy search on the active filters\",\n  },\n];\n\nconst createMessage = (role: MessageRole, text: string): Message => ({\n  id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n  role,\n  text,\n  createdAt: new Date().toISOString(),\n});\n\nconst formatTime = (iso: string) =>\n  new Date(iso).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nconst ROLE_META: Record<MessageRole, { label: string; initial: string }> = {\n  teacher: { label: \"Teacher\", initial: \"T\" },\n  student: { label: \"Student\", initial: \"S\" },\n  system: { label: \"System\", initial: \"ℹ\" },\n};\n\nexport default function ChatApp() {\n  const [messages, setMessages] = useState<Message[]>(() => [\n    createMessage(\"system\", \"Welcome! Let’s start when you’re ready to teach.\"),\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState<string | null>(null);\n  const [isSending, setIsSending] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [commandQuery, setCommandQuery] = useState(\"\");\n  const [teachMode, setTeachMode] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [sessions, setSessions] = useState<SessionInfo[]>([]);\n  const [editingSession, setEditingSession] = useState<string | null>(null);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [refreshing, setRefreshing] = useState(false);\n\n  const bottomRef = useRef<HTMLDivElement | null>(null);\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n  const pushSystemMessage = (text: string) => {\n    setMessages((prev) => [...prev, createMessage(\"system\", text)]);\n  };\n\n  const fetchTeachMode = async () => {\n    try {\n      const res = await fetch(`${API_BASE}/teach_mode`);\n      if (!res.ok) {\n        return;\n      }\n      const data = await res.json();\n      setTeachMode(Boolean(data?.teach_mode));\n    } catch (error) {\n      console.error(\"Failed to load Teach Mode state\", error);\n    }\n  };\n\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, isSending]);\n\n  useEffect(() => {\n    fetchTeachMode();\n    fetchSessions(true);\n  }, []);\n\n  const filteredCommands = useMemo(() => {\n    if (!showSuggestions) {\n      return [];\n    }\n    const token = commandQuery.trim();\n    if (!token) {\n      return COMMANDS;\n    }\n    return COMMANDS.filter((cmd) =>\n      cmd.name.toLowerCase().includes(token) || cmd.usage.toLowerCase().includes(token)\n    );\n  }, [commandQuery, showSuggestions]);\n\n  const closeCommandPalette = () => {\n    setShowSuggestions(false);\n    setCommandQuery(\"\");\n  };\n\n  const updateTeachMode = async (enabled: boolean) => {\n    try {\n      const res = await fetch(`${API_BASE}/teach_mode?enabled=${enabled}`, { method: \"POST\" });\n      if (!res.ok) {\n        const text = await res.text();\n        pushSystemMessage(`❌ Teach Mode update failed: ${text || res.statusText}`);\n        return;\n      }\n      const data = await res.json();\n      const state = Boolean(data?.teach_mode);\n      setTeachMode(state);\n      pushSystemMessage(`Teach Mode ${state ? \"ON\" : \"OFF\"}.`);\n    } catch (error) {\n      console.error(\"Failed to update Teach Mode\", error);\n      pushSystemMessage(\"⚠️ Could not reach the Teach Mode endpoint.\");\n    }\n  };\n\n  const handleToggleTeachMode = async () => {\n    await updateTeachMode(!teachMode);\n  };\n\n  const handleFileInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const fileList = event.target.files;\n    if (!fileList || fileList.length === 0) {\n      return;\n    }\n\n    const files = Array.from(fileList);\n    if (files.length > 5) {\n      pushSystemMessage(\"Please upload up to 5 files at a time.\");\n      event.target.value = \"\";\n      return;\n    }\n\n    setIsUploading(true);\n    try {\n      const formData = new FormData();\n      files.forEach((file) => formData.append(\"files\", file));\n\n      const response = await fetch(`${API_BASE}/documents/upload`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        pushSystemMessage(`❌ Upload failed: ${errorText || response.statusText}`);\n        return;\n      }\n\n      const data = await response.json();\n      const uploaded = Array.isArray(data.uploaded) ? data.uploaded : [];\n      const errors = Array.isArray(data.errors) ? data.errors : [];\n\n      if (uploaded.length > 0) {\n        const names = uploaded.map((item: any) => item?.filename || \"document\").join(\", \");\n        pushSystemMessage(`📄 Uploaded ${uploaded.length} document(s): ${names}.`);\n      }\n\n      errors.forEach((err: any) => {\n        if (err?.filename && err?.error) {\n          pushSystemMessage(`⚠️ ${err.filename}: ${err.error}`);\n        }\n      });\n    } catch (error) {\n      console.error(\"Upload failed\", error);\n      pushSystemMessage(\"⚠️ Could not upload documents. Please try again.\");\n    } finally {\n      setIsUploading(false);\n      event.target.value = \"\";\n    }\n  };\n\n  const fetchSessions = async (autoLoad: boolean = false) => {\n    setRefreshing(true);\n    try {\n      const res = await fetch(`${API_BASE}/sidebar_sessions`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      const list: SessionInfo[] = Array.isArray(data.sessions) ? data.sessions : [];\n      setSessions(list);\n      if (autoLoad && list.length > 0) {\n        await handleSelectSession(list[0].session_id);\n      }\n    } catch (err) {\n      console.error(\"Sidebar fetch failed\", err);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  const handleDeleteSession = async (sessionIdToDelete: string) => {\n    if (!window.confirm(\"Delete this chat permanently?\")) return;\n    try {\n      const res = await fetch(`${API_BASE}/delete_session?session_id=${sessionIdToDelete}`, { method: \"DELETE\" });\n      if (!res.ok) throw new Error(await res.text());\n      if (sessionId === sessionIdToDelete) {\n        setSessionId(null);\n        setMessages([\n          createMessage(\n            \"system\",\n            \"Session deleted. Start a new chat or pick another conversation from the list.\"\n          ),\n        ]);\n      }\n      await fetchSessions(sessionId === sessionIdToDelete);\n    } catch (err) {\n      console.error(\"Delete failed\", err);\n      pushSystemMessage(\"⚠️ Failed to delete session.\");\n    }\n  };\n\n  const handleRenameSession = async (sessionId: string) => {\n    if (!newTitle.trim()) {\n      pushSystemMessage(\"Provide a new title before saving.\");\n      return;\n    }\n    try {\n      const res = await fetch(\n        `${API_BASE}/rename_session?session_id=${sessionId}&new_name=${encodeURIComponent(newTitle.trim())}`,\n        { method: \"POST\" }\n      );\n      if (!res.ok) throw new Error(await res.text());\n      setEditingSession(null);\n      setNewTitle(\"\");\n      await fetchSessions();\n    } catch (err) {\n      console.error(\"Rename failed\", err);\n      pushSystemMessage(\"⚠️ Failed to rename session.\");\n    }\n  };\n\n  const handleSelectSession = async (sessionId: string) => {\n    try {\n      const res = await fetch(`${API_BASE}/session_messages?session_id=${sessionId}`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setSessionId(sessionId);\n      setMessages(\n        (data.messages || []).map((m: any) => ({\n          id: `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n          role: m.role === \"assistant\" ? \"student\" : \"teacher\",\n          text: m.content,\n          createdAt: m.timestamp || new Date().toISOString(),\n        }))\n      );\n    } catch (err) {\n      console.error(\"Session load failed\", err);\n      pushSystemMessage(\"⚠️ Failed to load session.\");\n    }\n  };\n\n  const handleInputChange = (value: string) => {\n    setInput(value);\n    if (value.startsWith(\"/\")) {\n      const afterSlash = value.slice(1).toLowerCase();\n      const [firstToken = \"\"] = afterSlash.split(/\\s+/);\n      setShowSuggestions(true);\n      setCommandQuery(firstToken);\n    } else {\n      closeCommandPalette();\n    }\n  };\n\n  const handleNewChat = () => {\n    setMessages([\n      createMessage(\n        \"system\",\n        \"New chat started. Use /topic <subject> when you're ready to begin teaching.\"\n      ),\n    ]);\n    setSessionId(null);\n    setInput(\"\");\n    closeCommandPalette();\n  };\n\n  const processInput = async (rawInput: string) => {\n    const trimmed = rawInput.trim();\n    if (!trimmed) return;\n\n    setInput(\"\");\n\n    if (trimmed.startsWith(\"/\")) {\n      closeCommandPalette();\n      await handleCommand(trimmed);\n      return;\n    }\n\n    closeCommandPalette();\n    await sendPrompt(trimmed);\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    await processInput(input);\n  };\n\n  const sendPrompt = async (prompt: string) => {\n    const teacherMessage = createMessage(\"teacher\", prompt);\n    setMessages((prev) => [...prev, teacherMessage]);\n    setIsSending(true);\n\n    try {\n      const url = new URL(`${API_BASE}/chat`);\n      url.searchParams.set(\"prompt\", prompt);\n      if (sessionId) {\n        url.searchParams.set(\"session_id\", sessionId);\n      }\n\n      const response = await fetch(url.toString(), { method: \"POST\" });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setMessages((prev) => [\n          ...prev,\n          createMessage(\"system\", `❌ Server error: ${errorText || response.statusText}`),\n        ]);\n        return;\n      }\n\n      const data = await response.json();\n      setSessionId(data.session_id ?? sessionId);\n\n      const rawResponse = typeof data.response === \"string\" ? data.response : \"\";\n      const trimmedResponse = rawResponse.trim();\n      const assistantReply =\n        trimmedResponse.length > 0\n          ? trimmedResponse\n          : teachMode\n          ? \"\"\n          : \"I did not receive a response from the model.\";\n\n      setMessages((prev) => [...prev, createMessage(\"student\", assistantReply)]);\n      fetchSessions();\n    } catch (error) {\n      console.error(error);\n      setMessages((prev) => [\n        ...prev,\n        createMessage(\"system\", \"⚠️ Connection error. Confirm the FastAPI server is running.\"),\n      ]);\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  const handleCommand = async (rawCommand: string) => {\n    const stripped = rawCommand.slice(1).trim();\n    console.log(\"Command executed:\", rawCommand);\n    const commandMessage = null;\n\n    if (!stripped) {\n      setMessages((prev) => [\n        ...prev,\n        createMessage(\"system\", \"Type /help to see the available commands.\"),\n      ]);\n      return;\n    }\n\n    const [commandToken, ...args] = stripped.split(/\\s+/);\n    const normalized = commandToken.toLowerCase();\n\n    const appendSystem = (...systemTexts: string[]) => {\n      setMessages((prev) => [\n        ...prev,\n        ...systemTexts.map((text) => createMessage(\"system\", text)),\n      ]);\n    };\n\n    if (normalized === \"topic\") {\n      const topic = args.join(\" \").trim();\n      if (!topic) {\n        appendSystem(\"Usage: /topic <new_topic>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/topic`);\n        url.searchParams.set(\"new_topic\", topic);\n        const res = await fetch(url.toString(), { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Topic update failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem(data.message ?? `✅ Topic set to '${topic}'.`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the topic endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"session\") {\n      const sub = (args[0] || \"\").toLowerCase();\n      if (sub === \"new\") {\n        try {\n          const res = await fetch(`${API_BASE}/session`, { method: \"POST\" });\n          if (!res.ok) {\n            const text = await res.text();\n            appendSystem(`❌ Session start failed: ${text || res.statusText}`);\n            return;\n          }\n          const data = await res.json();\n          handleNewChat();\n          setSessionId(data.session_id ?? null);\n          setMessages((prev) => [\n            ...prev,\n            createMessage(\"system\", data.message ?? \"🆕 New session started.\"),\n          ]);\n        } catch (error) {\n          console.error(error);\n          appendSystem(\"⚠️ Could not start a new session.\");\n        }\n      } else {\n        appendSystem(\"Usage: /session new\");\n      }\n      return;\n    }\n\n    if (normalized === \"summary\") {\n      if (!sessionId) {\n        appendSystem(\"No active session. Use /session new to begin.\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/summary`);\n        url.searchParams.set(\"session_id\", sessionId);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Summary failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const summary = typeof data.summary === \"string\" ? data.summary : JSON.stringify(data.summary);\n        appendSystem(`📘 Session summary:\\n\\n${summary}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not retrieve the summary.\");\n      }\n      return;\n    }\n\n    if (normalized === \"search_topic\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search_topic <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search_topic`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Topic search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results) ? data.results : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched “${query}”.`);\n          return;\n        }\n        const formatted = hits\n          .map(\n            (item: any, index: number) =>\n              `${index + 1}. ${item?.memory ?? \"—\"}\\n   score: ${item?.score?.toFixed?.(3) ?? \"?\"}`\n          )\n          .join(\"\\n\\n\");\n        appendSystem(`🔍 Memories mentioning “${query}”:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the search endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"search\") {\n      const query = args.join(\" \").trim();\n      if (!query) {\n        appendSystem(\"Usage: /search <keywords>\");\n        return;\n      }\n      try {\n        const url = new URL(`${API_BASE}/search`);\n        url.searchParams.set(\"query\", query);\n        const res = await fetch(url.toString());\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Search failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const hits = Array.isArray(data.results?.results)\n          ? data.results.results\n          : Array.isArray(data.results)\n          ? data.results\n          : [];\n        if (hits.length === 0) {\n          appendSystem(`No memories matched “${query}”.`);\n          return;\n        }\n        const formatted = hits\n          .map((item: any, index: number) => {\n            const memoryText = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${index + 1}. ${memoryText}`;\n          })\n          .join(\"\\n\\n\");\n        appendSystem(`🔍 Search results for “${query}”:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the search API.\");\n      }\n      return;\n    }\n\n    if (normalized === \"all\") {\n      try {\n        const res = await fetch(`${API_BASE}/all`);\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Fetch failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        const memories = Array.isArray(data.memories) ? data.memories : [];\n        if (memories.length === 0) {\n          appendSystem(\"No stored memories yet.\");\n          return;\n        }\n        const formatted = memories\n          .map((item: any, index: number) => {\n            const meta = item?.metadata?.type ? ` (${item.metadata.type})` : \"\";\n            const base = item?.memory ?? item?.value ?? JSON.stringify(item);\n            return `${index + 1}. ${base}${meta}`;\n          })\n          .join(\"\\n\\n\");\n        appendSystem(`🗂️ Complete memory listing:\\n\\n${formatted}`);\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not fetch stored memories.\");\n      }\n      return;\n    }\n\n    if (normalized === \"reset\") {\n      try {\n        const res = await fetch(`${API_BASE}/reset`, { method: \"POST\" });\n        if (!res.ok) {\n          const text = await res.text();\n          appendSystem(`❌ Reset failed: ${text || res.statusText}`);\n          return;\n        }\n        const data = await res.json();\n        appendSystem(data?.message ?? \"Memory reset complete.\");\n      } catch (error) {\n        console.error(error);\n        appendSystem(\"⚠️ Could not reach the reset endpoint.\");\n      }\n      return;\n    }\n\n    if (normalized === \"help\") {\n      const helpText = COMMANDS.map((cmd) => `${cmd.usage} — ${cmd.description}`).join(\"\\n\");\n      appendSystem(helpText);\n      return;\n    }\n\n    appendSystem(`Unknown command “/${normalized}”. Try /help.`);\n  };\n\n  const applyCommandTemplate = (command: CommandDefinition) => {\n    const template = command.usage.endsWith(\" \") ? command.usage : `${command.usage} `;\n    setInput(template);\n    setCommandQuery(\"\");\n    setShowSuggestions(false);\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"chat-shell\">\n        <aside className=\"chat-sidebar\">\n          <div className=\"sidebar-header\">\n            <button className=\"ghost-button large\" onClick={handleNewChat}>\n              + New Chat\n            </button>\n            <button className=\"ghost-button\" onClick={() => fetchSessions()} disabled={refreshing}>\n              {refreshing ? \"Refreshing…\" : \"↻ Refresh\"}\n            </button>\n          </div>\n\n          <div className=\"sidebar-section\">\n            <h2>Chats</h2>\n            <ul className=\"session-list\">\n              {sessions.length === 0 && <li className=\"empty\">No chats yet.</li>}\n              {sessions.map((s) => (\n                <li\n                  key={s.session_id}\n                  className={`session-item ${sessionId === s.session_id ? \"active\" : \"\"}`}\n                >\n                  {editingSession === s.session_id ? (\n                    <form\n                      onSubmit={(e) => {\n                        e.preventDefault();\n                        handleRenameSession(s.session_id);\n                      }}\n                    >\n                      <input\n                        type=\"text\"\n                        value={newTitle}\n                        onChange={(e) => setNewTitle(e.target.value)}\n                        placeholder=\"New title\"\n                        autoFocus\n                      />\n                      <button type=\"submit\" className=\"mini-btn\">\n                        Save\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"mini-btn\"\n                        onClick={() => {\n                          setEditingSession(null);\n                          setNewTitle(\"\");\n                        }}\n                      >\n                        ✖\n                      </button>\n                    </form>\n                  ) : (\n                    <div\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => handleSelectSession(s.session_id)}\n                      onKeyDown={(e) => {\n                        if (e.key === \"Enter\" || e.key === \" \") {\n                          e.preventDefault();\n                          handleSelectSession(s.session_id);\n                        }\n                      }}\n                    >\n                      <strong>{s.title || s.preview.slice(0, 30) || \"Untitled Chat\"}</strong>\n                      <p className=\"preview\">{s.preview || \"No messages\"}</p>\n                      <small>\n                        {s.last_message_time\n                          ? new Date(s.last_message_time).toLocaleString()\n                          : \"\"}\n                      </small>\n                      <div className=\"session-actions\">\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            setEditingSession(s.session_id);\n                            setNewTitle(s.title || s.preview || \"\");\n                          }}\n                        >\n                          ✏️\n                        </button>\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleDeleteSession(s.session_id);\n                          }}\n                        >\n                          🗑️\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"sidebar-section\">\n            <h2>Teach Mode</h2>\n            <button\n              type=\"button\"\n              className={`ghost-button teach-toggle ${teachMode ? \"active\" : \"\"}`}\n              onClick={handleToggleTeachMode}\n              disabled={isUploading || isSending}\n            >\n              {teachMode ? \"Teach Mode: ON\" : \"Teach Mode: OFF\"}\n            </button>\n            <p className=\"sidebar-hint\">\n              When on, the student stays quiet so you can teach uninterrupted.\n            </p>\n          </div>\n        </aside>\n\n        <main className=\"chat-main\">\n          <header className=\"chat-header\">\n            <div>\n              <h2 className=\"chat-header-title\">AI Student Mentor</h2>\n              <p className=\"chat-header-subtitle\">\n                Guide the learner and the assistant will respond with grounded context.\n              </p>\n            </div>\n            <span className={`status-badge ${isSending ? \"typing\" : \"idle\"}`}>\n              {isSending ? \"Generating…\" : \"Idle\"}\n            </span>\n          </header>\n\n          <section className=\"message-list\">\n            {messages.map((message) => (\n              <article\n                key={message.id}\n                className={`message-row ${message.role}`}\n                aria-label={`${ROLE_META[message.role].label} message`}\n              >\n                <div className={`message-avatar ${message.role}`}>\n                  {ROLE_META[message.role].initial}\n                </div>\n                <div className={`message-bubble ${message.role}`}>\n                  <div className=\"message-meta\">\n                    <span className=\"role\">{ROLE_META[message.role].label}</span>\n                    <span className=\"time\">{formatTime(message.createdAt)}</span>\n                  </div>\n                  <div className=\"message-text\">{message.text}</div>\n                </div>\n              </article>\n            ))}\n\n            {isSending && (\n              <article className=\"message-row student typing\" aria-live=\"polite\">\n                <div className=\"message-avatar student\">S</div>\n                <div className=\"message-bubble student\">\n                  <div className=\"message-meta\">\n                    <span className=\"role\">Student</span>\n                    <span className=\"time\">…</span>\n                  </div>\n                  <div className=\"typing-indicator\">\n                    <span />\n                    <span />\n                    <span />\n                  </div>\n                </div>\n              </article>\n            )}\n            <div ref={bottomRef} />\n          </section>\n\n          <form className=\"chat-input\" onSubmit={handleSubmit}>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              style={{ display: \"none\" }}\n              multiple\n              accept=\".pdf,.ppt,.pptx,.doc,.docx,.xls,.xlsx,.md,.txt,.png,.jpg,.jpeg,.heic,.bmp,.csv,.tsv\"\n              onChange={handleFileInputChange}\n            />\n            <div className=\"chat-textarea-wrapper\">\n              <textarea\n                className=\"chat-textarea\"\n                placeholder=\"Enter your message.\"\n                value={input}\n                disabled={isSending}\n                onChange={(event) => handleInputChange(event.target.value)}\n                onKeyDown={async (event) => {\n                  if (event.key === \"Escape\" && showSuggestions) {\n                    event.preventDefault();\n                    closeCommandPalette();\n                    return;\n                  }\n                  if (event.key === \"Tab\" && showSuggestions && filteredCommands.length > 0) {\n                    event.preventDefault();\n                    applyCommandTemplate(filteredCommands[0]);\n                    return;\n                  }\n                  if (event.key === \"Enter\" && !event.shiftKey) {\n                    event.preventDefault();\n                    await processInput(input);\n                  }\n                }}\n                rows={Math.min(6, input.split(\"\\n\").length + 1)}\n              />\n\n              {showSuggestions && filteredCommands.length > 0 && (\n                <div className=\"command-suggestions\">\n                  {filteredCommands.map((cmd) => (\n                    <button\n                      key={cmd.name}\n                      type=\"button\"\n                      className=\"command-suggestion\"\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        applyCommandTemplate(cmd);\n                      }}\n                    >\n                      <strong>{cmd.usage}</strong>\n                      <span>{cmd.description}</span>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n              \n            <div className=\"chat-actions\">\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={() => fileInputRef.current?.click()}\n                disabled={isUploading || isSending}\n              >\n                {isUploading ? \"Uploading…\" : \"Upload Docs\"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={() => setInput((prev) => `${prev}\\n`)}\n                disabled={isSending}\n              >\n                New line\n              </button>\n              <button type=\"submit\" className=\"primary-button\" disabled={isSending}>\n                {isSending ? \"Sending…\" : \"Send\"}\n              </button>\n            </div>\n          </form>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}